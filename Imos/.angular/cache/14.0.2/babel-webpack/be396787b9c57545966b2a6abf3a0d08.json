{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { NgModule, Injectable, NgZone } from '@angular/core';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\nimport { Platform } from '@angular/cdk/platform';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\n\nclass LayoutModule {}\n\nLayoutModule.ɵfac = function LayoutModule_Factory(t) {\n  return new (t || LayoutModule)();\n};\n\nLayoutModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: LayoutModule\n});\nLayoutModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LayoutModule, [{\n    type: NgModule,\n    args: [{}]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Global registry for all dynamically-created, injected media queries. */\n\n\nconst mediaQueriesForWebkitCompatibility = new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\n\nlet mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\n\nclass MediaMatcher {\n  constructor(_platform) {\n    this._platform = _platform;\n    this._matchMedia = this._platform.isBrowser && window.matchMedia ? // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n    // call it from a different scope.\n    window.matchMedia.bind(window) : noopMatchMedia;\n  }\n  /**\n   * Evaluates the given media query and returns the native MediaQueryList from which results\n   * can be retrieved.\n   * Confirms the layout engine will trigger for the selector query provided and returns the\n   * MediaQueryList for the query provided.\n   */\n\n\n  matchMedia(query) {\n    if (this._platform.WEBKIT || this._platform.BLINK) {\n      createEmptyStyleRule(query);\n    }\n\n    return this._matchMedia(query);\n  }\n\n}\n\nMediaMatcher.ɵfac = function MediaMatcher_Factory(t) {\n  return new (t || MediaMatcher)(ɵngcc0.ɵɵinject(ɵngcc1.Platform));\n};\n\nMediaMatcher.ɵprov = i0.ɵɵdefineInjectable({\n  factory: function MediaMatcher_Factory() {\n    return new MediaMatcher(i0.ɵɵinject(i1.Platform));\n  },\n  token: MediaMatcher,\n  providedIn: \"root\"\n});\n\nMediaMatcher.ctorParameters = () => [{\n  type: Platform\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MediaMatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.Platform\n    }];\n  }, null);\n})();\n/**\n * Creates an empty stylesheet that is used to work around browser inconsistencies related to\n * `matchMedia`. At the time of writing, it handles the following cases:\n * 1. On WebKit browsers, a media query has to have at least one rule in order for `matchMedia`\n * to fire. We work around it by declaring a dummy stylesheet with a `@media` declaration.\n * 2. In some cases Blink browsers will stop firing the `matchMedia` listener if none of the rules\n * inside the `@media` match existing elements on the page. We work around it by having one rule\n * targeting the `body`. See https://github.com/angular/components/issues/23546.\n */\n\n\nfunction createEmptyStyleRule(query) {\n  if (mediaQueriesForWebkitCompatibility.has(query)) {\n    return;\n  }\n\n  try {\n    if (!mediaQueryStyleNode) {\n      mediaQueryStyleNode = document.createElement('style');\n      mediaQueryStyleNode.setAttribute('type', 'text/css');\n      document.head.appendChild(mediaQueryStyleNode);\n    }\n\n    if (mediaQueryStyleNode.sheet) {\n      mediaQueryStyleNode.sheet.insertRule(`@media ${query} {body{ }}`, 0);\n      mediaQueriesForWebkitCompatibility.add(query);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\n\n\nfunction noopMatchMedia(query) {\n  // Use `as any` here to avoid adding additional necessary properties for\n  // the noop matcher.\n  return {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {},\n    removeListener: () => {}\n  };\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Utility for checking the matching state of @media queries. */\n\n\nclass BreakpointObserver {\n  constructor(_mediaMatcher, _zone) {\n    this._mediaMatcher = _mediaMatcher;\n    this._zone = _zone;\n    /**  A map of all media queries currently being listened for. */\n\n    this._queries = new Map();\n    /** A subject for all other observables to takeUntil based on. */\n\n    this._destroySubject = new Subject();\n  }\n  /** Completes the active subject, signalling to all other observables to complete. */\n\n\n  ngOnDestroy() {\n    this._destroySubject.next();\n\n    this._destroySubject.complete();\n  }\n  /**\n   * Whether one or more media queries match the current viewport size.\n   * @param value One or more media queries to check.\n   * @returns Whether any of the media queries match.\n   */\n\n\n  isMatched(value) {\n    const queries = splitQueries(coerceArray(value));\n    return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n  }\n  /**\n   * Gets an observable of results for the given queries that will emit new results for any changes\n   * in matching of the given queries.\n   * @param value One or more media queries to check.\n   * @returns A stream of matches for the given queries.\n   */\n\n\n  observe(value) {\n    const queries = splitQueries(coerceArray(value));\n    const observables = queries.map(query => this._registerQuery(query).observable);\n    let stateObservable = combineLatest(observables); // Emit the first state immediately, and then debounce the subsequent emissions.\n\n    stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n    return stateObservable.pipe(map(breakpointStates => {\n      const response = {\n        matches: false,\n        breakpoints: {}\n      };\n      breakpointStates.forEach(({\n        matches,\n        query\n      }) => {\n        response.matches = response.matches || matches;\n        response.breakpoints[query] = matches;\n      });\n      return response;\n    }));\n  }\n  /** Registers a specific query to be listened for. */\n\n\n  _registerQuery(query) {\n    // Only set up a new MediaQueryList if it is not already being listened for.\n    if (this._queries.has(query)) {\n      return this._queries.get(query);\n    }\n\n    const mql = this._mediaMatcher.matchMedia(query); // Create callback for match changes and add it is as a listener.\n\n\n    const queryObservable = new Observable(observer => {\n      // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n      // back into the zone because matchMedia is only included in Zone.js by loading the\n      // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n      // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n      // patches it.\n      const handler = e => this._zone.run(() => observer.next(e));\n\n      mql.addListener(handler);\n      return () => {\n        mql.removeListener(handler);\n      };\n    }).pipe(startWith(mql), map(({\n      matches\n    }) => ({\n      query,\n      matches\n    })), takeUntil(this._destroySubject)); // Add the MediaQueryList to the set of queries.\n\n    const output = {\n      observable: queryObservable,\n      mql\n    };\n\n    this._queries.set(query, output);\n\n    return output;\n  }\n\n}\n\nBreakpointObserver.ɵfac = function BreakpointObserver_Factory(t) {\n  return new (t || BreakpointObserver)(ɵngcc0.ɵɵinject(MediaMatcher), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\n\nBreakpointObserver.ɵprov = i0.ɵɵdefineInjectable({\n  factory: function BreakpointObserver_Factory() {\n    return new BreakpointObserver(i0.ɵɵinject(MediaMatcher), i0.ɵɵinject(i0.NgZone));\n  },\n  token: BreakpointObserver,\n  providedIn: \"root\"\n});\n\nBreakpointObserver.ctorParameters = () => [{\n  type: MediaMatcher\n}, {\n  type: NgZone\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreakpointObserver, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: MediaMatcher\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\n\n\nfunction splitQueries(queries) {\n  return queries.map(query => query.split(',')).reduce((a1, a2) => a1.concat(a2)).map(query => query.trim());\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\n\n\nconst Breakpoints = {\n  XSmall: '(max-width: 599.98px)',\n  Small: '(min-width: 600px) and (max-width: 959.98px)',\n  Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n  Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n  XLarge: '(min-width: 1920px)',\n  Handset: '(max-width: 599.98px) and (orientation: portrait), ' + '(max-width: 959.98px) and (orientation: landscape)',\n  Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' + '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n  Web: '(min-width: 840px) and (orientation: portrait), ' + '(min-width: 1280px) and (orientation: landscape)',\n  HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n  TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n  WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n  HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n  TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n  WebLandscape: '(min-width: 1280px) and (orientation: landscape)'\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };","map":{"version":3,"names":["i0","NgModule","Injectable","NgZone","coerceArray","Subject","combineLatest","concat","Observable","take","skip","debounceTime","map","startWith","takeUntil","i1","Platform","ɵngcc0","ɵngcc1","LayoutModule","ɵfac","LayoutModule_Factory","t","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","ngDevMode","ɵsetClassMetadata","args","mediaQueriesForWebkitCompatibility","Set","mediaQueryStyleNode","MediaMatcher","constructor","_platform","_matchMedia","isBrowser","window","matchMedia","bind","noopMatchMedia","query","WEBKIT","BLINK","createEmptyStyleRule","MediaMatcher_Factory","ɵɵinject","ɵprov","ɵɵdefineInjectable","factory","token","providedIn","ctorParameters","has","document","createElement","setAttribute","head","appendChild","sheet","insertRule","add","e","console","error","matches","media","addListener","removeListener","BreakpointObserver","_mediaMatcher","_zone","_queries","Map","_destroySubject","ngOnDestroy","next","complete","isMatched","value","queries","splitQueries","some","mediaQuery","_registerQuery","mql","observe","observables","observable","stateObservable","pipe","breakpointStates","response","breakpoints","forEach","get","queryObservable","observer","handler","run","output","set","BreakpointObserver_Factory","split","reduce","a1","a2","trim","Breakpoints","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape"],"sources":["C:/Team-43-IMOS/Team-43-IMOS/Imos/node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/layout.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { NgModule, Injectable, NgZone } from '@angular/core';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\nimport { Platform } from '@angular/cdk/platform';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nclass LayoutModule {\n}\nLayoutModule.ɵfac = function LayoutModule_Factory(t) { return new (t || LayoutModule)(); };\nLayoutModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: LayoutModule });\nLayoutModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LayoutModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\nclass MediaMatcher {\n    constructor(_platform) {\n        this._platform = _platform;\n        this._matchMedia = this._platform.isBrowser && window.matchMedia ?\n            // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n            // call it from a different scope.\n            window.matchMedia.bind(window) :\n            noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT || this._platform.BLINK) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    }\n}\nMediaMatcher.ɵfac = function MediaMatcher_Factory(t) { return new (t || MediaMatcher)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\nMediaMatcher.ɵprov = i0.ɵɵdefineInjectable({ factory: function MediaMatcher_Factory() { return new MediaMatcher(i0.ɵɵinject(i1.Platform)); }, token: MediaMatcher, providedIn: \"root\" });\nMediaMatcher.ctorParameters = () => [\n    { type: Platform }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MediaMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\n/**\n * Creates an empty stylesheet that is used to work around browser inconsistencies related to\n * `matchMedia`. At the time of writing, it handles the following cases:\n * 1. On WebKit browsers, a media query has to have at least one rule in order for `matchMedia`\n * to fire. We work around it by declaring a dummy stylesheet with a `@media` declaration.\n * 2. In some cases Blink browsers will stop firing the `matchMedia` listener if none of the rules\n * inside the `@media` match existing elements on the page. We work around it by having one rule\n * targeting the `body`. See https://github.com/angular/components/issues/23546.\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            document.head.appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            mediaQueryStyleNode.sheet.insertRule(`@media ${query} {body{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: () => { },\n        removeListener: () => { }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Utility for checking the matching state of @media queries. */\nclass BreakpointObserver {\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**  A map of all media queries currently being listened for. */\n        this._queries = new Map();\n        /** A subject for all other observables to takeUntil based on. */\n        this._destroySubject = new Subject();\n    }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    isMatched(value) {\n        const queries = splitQueries(coerceArray(value));\n        return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    observe(value) {\n        const queries = splitQueries(coerceArray(value));\n        const observables = queries.map(query => this._registerQuery(query).observable);\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map(breakpointStates => {\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach(({ matches, query }) => {\n                response.matches = response.matches || matches;\n                response.breakpoints[query] = matches;\n            });\n            return response;\n        }));\n    }\n    /** Registers a specific query to be listened for. */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return this._queries.get(query);\n        }\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        const queryObservable = new Observable((observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            const handler = (e) => this._zone.run(() => observer.next(e));\n            mql.addListener(handler);\n            return () => {\n                mql.removeListener(handler);\n            };\n        }).pipe(startWith(mql), map(({ matches }) => ({ query, matches })), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n}\nBreakpointObserver.ɵfac = function BreakpointObserver_Factory(t) { return new (t || BreakpointObserver)(ɵngcc0.ɵɵinject(MediaMatcher), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nBreakpointObserver.ɵprov = i0.ɵɵdefineInjectable({ factory: function BreakpointObserver_Factory() { return new BreakpointObserver(i0.ɵɵinject(MediaMatcher), i0.ɵɵinject(i0.NgZone)); }, token: BreakpointObserver, providedIn: \"root\" });\nBreakpointObserver.ctorParameters = () => [\n    { type: MediaMatcher },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreakpointObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MediaMatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n    return queries.map(query => query.split(','))\n        .reduce((a1, a2) => a1.concat(a2))\n        .map(query => query.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nconst Breakpoints = {\n    XSmall: '(max-width: 599.98px)',\n    Small: '(min-width: 600px) and (max-width: 959.98px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.98px) and (orientation: portrait), ' +\n        '(max-width: 959.98px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}