{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Version, InjectionToken, isDevMode, NgModule, Optional, Inject, inject, LOCALE_ID, Injectable, Directive, ElementRef, NgZone, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, ChangeDetectorRef, Output } from '@angular/core';\nimport { HighContrastModeDetector, isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$2 } from '@angular/cdk';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { _isTestEnvironment, Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Current version of Angular Material. */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\n\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n  }\n}\n\nfunction MatOption_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"(\", ctx_r1.group.label, \")\");\n  }\n}\n\nconst _c2 = [\"*\"];\nconst VERSION$1 = new Version('12.2.13');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\n\nclass AnimationCurves {}\n\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/** @docs-private */\n\nclass AnimationDurations {}\n\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Private version constant to circumvent test/build issues,\n// i.e. avoid core to depend on the @angular/material primary entry-point\n// Can be removed once the Material primary entry-point no longer\n// re-exports all secondary entry-points\n\nconst VERSION = new Version('12.2.13');\n/** @docs-private */\n\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n  return true;\n}\n/** Injection token that configures whether the Material sanity checks are enabled. */\n\n\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n  providedIn: 'root',\n  factory: MATERIAL_SANITY_CHECKS_FACTORY\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n\nclass MatCommonModule {\n  constructor(highContrastModeDetector, sanityChecks, document) {\n    /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n    this._hasDoneGlobalChecks = false;\n    this._document = document; // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n    // in MatCommonModule.\n\n    highContrastModeDetector._applyBodyHighContrastModeCssClasses(); // Note that `_sanityChecks` is typed to `any`, because AoT\n    // throws an error if we use the `SanityChecks` type directly.\n\n\n    this._sanityChecks = sanityChecks;\n\n    if (!this._hasDoneGlobalChecks) {\n      this._checkDoctypeIsDefined();\n\n      this._checkThemeIsPresent();\n\n      this._checkCdkVersionMatch();\n\n      this._hasDoneGlobalChecks = true;\n    }\n  }\n  /** Gets whether a specific sanity check is enabled. */\n\n\n  _checkIsEnabled(name) {\n    // TODO(crisbeto): we can't use `ngDevMode` here yet, because ViewEngine apps might not support\n    // it. Since these checks can have performance implications and they aren't tree shakeable\n    // in their current form, we can leave the `isDevMode` check in for now.\n    // tslint:disable-next-line:ban\n    if (!isDevMode() || _isTestEnvironment()) {\n      return false;\n    }\n\n    if (typeof this._sanityChecks === 'boolean') {\n      return this._sanityChecks;\n    }\n\n    return !!this._sanityChecks[name];\n  }\n\n  _checkDoctypeIsDefined() {\n    if (this._checkIsEnabled('doctype') && !this._document.doctype) {\n      console.warn('Current document does not have a doctype. This may cause ' + 'some Angular Material components not to behave as expected.');\n    }\n  }\n\n  _checkThemeIsPresent() {\n    // We need to assert that the `body` is defined, because these checks run very early\n    // and the `body` won't be defined if the consumer put their scripts in the `head`.\n    if (!this._checkIsEnabled('theme') || !this._document.body || typeof getComputedStyle !== 'function') {\n      return;\n    }\n\n    const testElement = this._document.createElement('div');\n\n    testElement.classList.add('mat-theme-loaded-marker');\n\n    this._document.body.appendChild(testElement);\n\n    const computedStyle = getComputedStyle(testElement); // In some situations the computed style of the test element can be null. For example in\n    // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n\n    if (computedStyle && computedStyle.display !== 'none') {\n      console.warn('Could not find Angular Material core theme. Most Material ' + 'components may not work as expected. For more info refer ' + 'to the theming guide: https://material.angular.io/guide/theming');\n    }\n\n    this._document.body.removeChild(testElement);\n  }\n  /** Checks whether the material version matches the cdk version */\n\n\n  _checkCdkVersionMatch() {\n    if (this._checkIsEnabled('version') && VERSION.full !== VERSION$2.full) {\n      console.warn('The Angular Material version (' + VERSION.full + ') does not match ' + 'the Angular CDK version (' + VERSION$2.full + ').\\n' + 'Please ensure the versions of these two packages exactly match.');\n    }\n  }\n\n}\n\nMatCommonModule.ɵfac = function MatCommonModule_Factory(t) {\n  return new (t || MatCommonModule)(ɵngcc0.ɵɵinject(ɵngcc1.HighContrastModeDetector), ɵngcc0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nMatCommonModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatCommonModule\n});\nMatCommonModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [BidiModule, BidiModule]\n});\n\nMatCommonModule.ctorParameters = () => [{\n  type: HighContrastModeDetector\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MATERIAL_SANITY_CHECKS]\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCommonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule],\n      exports: [BidiModule]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.HighContrastModeDetector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MATERIAL_SANITY_CHECKS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCommonModule, {\n    imports: function () {\n      return [BidiModule];\n    },\n    exports: function () {\n      return [BidiModule];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction mixinDisabled(base) {\n  return class extends base {\n    constructor(...args) {\n      super(...args);\n      this._disabled = false;\n    }\n\n    get disabled() {\n      return this._disabled;\n    }\n\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n\n  };\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction mixinColor(base, defaultColor) {\n  return class extends base {\n    constructor(...args) {\n      super(...args);\n      this.defaultColor = defaultColor; // Set the default color that can be specified from the mixin.\n\n      this.color = defaultColor;\n    }\n\n    get color() {\n      return this._color;\n    }\n\n    set color(value) {\n      const colorPalette = value || this.defaultColor;\n\n      if (colorPalette !== this._color) {\n        if (this._color) {\n          this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n        }\n\n        if (colorPalette) {\n          this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n        }\n\n        this._color = colorPalette;\n      }\n    }\n\n  };\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction mixinDisableRipple(base) {\n  return class extends base {\n    constructor(...args) {\n      super(...args);\n      this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n\n\n    get disableRipple() {\n      return this._disableRipple;\n    }\n\n    set disableRipple(value) {\n      this._disableRipple = coerceBooleanProperty(value);\n    }\n\n  };\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n  return class extends base {\n    constructor(...args) {\n      super(...args);\n      this._tabIndex = defaultTabIndex;\n      this.defaultTabIndex = defaultTabIndex;\n    }\n\n    get tabIndex() {\n      return this.disabled ? -1 : this._tabIndex;\n    }\n\n    set tabIndex(value) {\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\n      this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n    }\n\n  };\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction mixinErrorState(base) {\n  return class extends base {\n    constructor(...args) {\n      super(...args); // This class member exists as an interop with `MatFormFieldControl` which expects\n      // a public `stateChanges` observable to emit whenever the form field should be updated.\n      // The description is not specifically mentioning the error state, as classes using this\n      // mixin can/should emit an event in other cases too.\n\n      /** Emits whenever the component state changes. */\n\n      this.stateChanges = new Subject();\n      /** Whether the component is in an error state. */\n\n      this.errorState = false;\n    }\n    /** Updates the error state based on the provided error state matcher. */\n\n\n    updateErrorState() {\n      const oldState = this.errorState;\n      const parent = this._parentFormGroup || this._parentForm;\n      const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n      const control = this.ngControl ? this.ngControl.control : null;\n      const newState = matcher.isErrorState(control, parent);\n\n      if (newState !== oldState) {\n        this.errorState = newState;\n        this.stateChanges.next();\n      }\n    }\n\n  };\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\n\n\nfunction mixinInitialized(base) {\n  return class extends base {\n    constructor(...args) {\n      super(...args);\n      /** Whether this directive has been marked as initialized. */\n\n      this._isInitialized = false;\n      /**\n       * List of subscribers that subscribed before the directive was initialized. Should be notified\n       * during _markInitialized. Set to null after pending subscribers are notified, and should\n       * not expect to be populated after.\n       */\n\n      this._pendingSubscribers = [];\n      /**\n       * Observable stream that emits when the directive initializes. If already initialized, the\n       * subscriber is stored to be notified once _markInitialized is called.\n       */\n\n      this.initialized = new Observable(subscriber => {\n        // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n        // when _markInitialized is called.\n        if (this._isInitialized) {\n          this._notifySubscriber(subscriber);\n        } else {\n          this._pendingSubscribers.push(subscriber);\n        }\n      });\n    }\n    /**\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n     * of ngOnInit.\n     * @docs-private\n     */\n\n\n    _markInitialized() {\n      if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('This directive has already been marked as initialized and ' + 'should not be called twice.');\n      }\n\n      this._isInitialized = true;\n\n      this._pendingSubscribers.forEach(this._notifySubscriber);\n\n      this._pendingSubscribers = null;\n    }\n    /** Emits and completes the subscriber stream (should only emit once). */\n\n\n    _notifySubscriber(subscriber) {\n      subscriber.next();\n      subscriber.complete();\n    }\n\n  };\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\n\n\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY\n});\n/** @docs-private */\n\nfunction MAT_DATE_LOCALE_FACTORY() {\n  return inject(LOCALE_ID);\n}\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\n\n\nclass DateAdapter {\n  constructor() {\n    this._localeChanges = new Subject();\n    /** A stream that emits when the locale changes. */\n\n    this.localeChanges = this._localeChanges;\n  }\n  /**\n   * Given a potential date object, returns that same date object if it is\n   * a valid date, or `null` if it's not a valid date.\n   * @param obj The object to check.\n   * @returns A date or `null`.\n   */\n\n\n  getValidDateOrNull(obj) {\n    return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n  }\n  /**\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n   * string). The default implementation does not allow any deserialization, it simply checks that\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n   * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n   * support passing values from your backend directly to these properties by overriding this method\n   * to also deserialize the format used by your backend.\n   * @param value The value to be deserialized into a date object.\n   * @returns The deserialized date object, either a valid date, null if the value can be\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\n   */\n\n\n  deserialize(value) {\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n      return value;\n    }\n\n    return this.invalid();\n  }\n  /**\n   * Sets the locale used for all dates.\n   * @param locale The new locale.\n   */\n\n\n  setLocale(locale) {\n    this.locale = locale;\n\n    this._localeChanges.next();\n  }\n  /**\n   * Compares two dates.\n   * @param first The first date to compare.\n   * @param second The second date to compare.\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n\n\n  compareDate(first, second) {\n    return this.getYear(first) - this.getYear(second) || this.getMonth(first) - this.getMonth(second) || this.getDate(first) - this.getDate(second);\n  }\n  /**\n   * Checks if two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n\n\n  sameDate(first, second) {\n    if (first && second) {\n      let firstValid = this.isValid(first);\n      let secondValid = this.isValid(second);\n\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second);\n      }\n\n      return firstValid == secondValid;\n    }\n\n    return first == second;\n  }\n  /**\n   * Clamp the given date between min and max dates.\n   * @param date The date to clamp.\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n\n\n  clampDate(date, min, max) {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n\n    return date;\n  }\n\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): Remove when we no longer support safari 9.\n\n/** Whether the browser supports the Intl API. */\n\nlet SUPPORTS_INTL_API; // We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\n\ntry {\n  SUPPORTS_INTL_API = typeof Intl != 'undefined';\n} catch (_a) {\n  SUPPORTS_INTL_API = false;\n}\n/** The default month names to use if Intl API is not available. */\n\n\nconst DEFAULT_MONTH_NAMES = {\n  'long': ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\n\nconst ɵ0$1 = i => String(i + 1);\n/** The default date names to use if Intl API is not available. */\n\n\nconst DEFAULT_DATE_NAMES = range(31, ɵ0$1);\n/** The default day of the week names to use if Intl API is not available. */\n\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\n\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/** Creates an array and fills it with values. */\n\nfunction range(length, valueFunction) {\n  const valuesArray = Array(length);\n\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n\n  return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\n\n\nclass NativeDateAdapter extends DateAdapter {\n  constructor(matDateLocale, platform) {\n    super();\n    /**\n     * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n     * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n     * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n     * will produce `'8/13/1800'`.\n     *\n     * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n     * getting the string representation of a Date object from its utc representation. We're keeping\n     * it here for sometime, just for precaution, in case we decide to revert some of these changes\n     * though.\n     */\n\n    this.useUtcForDisplay = true;\n    super.setLocale(matDateLocale); // IE does its own time zone correction, so we disable this on IE.\n\n    this.useUtcForDisplay = !platform.TRIDENT;\n    this._clampDate = platform.TRIDENT || platform.EDGE;\n  }\n\n  getYear(date) {\n    return date.getFullYear();\n  }\n\n  getMonth(date) {\n    return date.getMonth();\n  }\n\n  getDate(date) {\n    return date.getDate();\n  }\n\n  getDayOfWeek(date) {\n    return date.getDay();\n  }\n\n  getMonthNames(style) {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        month: style,\n        timeZone: 'utc'\n      });\n      return range(12, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\n    }\n\n    return DEFAULT_MONTH_NAMES[style];\n  }\n\n  getDateNames() {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        day: 'numeric',\n        timeZone: 'utc'\n      });\n      return range(31, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n\n    return DEFAULT_DATE_NAMES;\n  }\n\n  getDayOfWeekNames(style) {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        weekday: style,\n        timeZone: 'utc'\n      });\n      return range(7, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\n  }\n\n  getYearName(date) {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        year: 'numeric',\n        timeZone: 'utc'\n      });\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n\n    return String(this.getYear(date));\n  }\n\n  getFirstDayOfWeek() {\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n    return 0;\n  }\n\n  getNumDaysInMonth(date) {\n    return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n  }\n\n  clone(date) {\n    return new Date(date.getTime());\n  }\n\n  createDate(year, month, date) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      // Check for invalid month and date (except upper bound on date which we have to check after\n      // creating the Date).\n      if (month < 0 || month > 11) {\n        throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n      }\n\n      if (date < 1) {\n        throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n      }\n    }\n\n    let result = this._createDateWithOverflow(year, month, date); // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n\n\n    if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n\n  today() {\n    return new Date();\n  }\n\n  parse(value) {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    if (typeof value == 'number') {\n      return new Date(value);\n    }\n\n    return value ? new Date(Date.parse(value)) : null;\n  }\n\n  format(date, displayFormat) {\n    if (!this.isValid(date)) {\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\n    }\n\n    if (SUPPORTS_INTL_API) {\n      // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n      // if we attempt to format a date whose year is less than 1 or greater than 9999.\n      if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n        date = this.clone(date);\n        date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n      }\n\n      displayFormat = Object.assign(Object.assign({}, displayFormat), {\n        timeZone: 'utc'\n      });\n      const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n\n    return this._stripDirectionalityCharacters(date.toDateString());\n  }\n\n  addCalendarYears(date, years) {\n    return this.addCalendarMonths(date, years * 12);\n  }\n\n  addCalendarMonths(date, months) {\n    let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date)); // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n\n\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n    }\n\n    return newDate;\n  }\n\n  addCalendarDays(date, days) {\n    return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n  }\n\n  toIso8601(date) {\n    return [date.getUTCFullYear(), this._2digit(date.getUTCMonth() + 1), this._2digit(date.getUTCDate())].join('-');\n  }\n  /**\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n   * invalid date for all other values.\n   */\n\n\n  deserialize(value) {\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      } // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n      // string is the right format first.\n\n\n      if (ISO_8601_REGEX.test(value)) {\n        let date = new Date(value);\n\n        if (this.isValid(date)) {\n          return date;\n        }\n      }\n    }\n\n    return super.deserialize(value);\n  }\n\n  isDateInstance(obj) {\n    return obj instanceof Date;\n  }\n\n  isValid(date) {\n    return !isNaN(date.getTime());\n  }\n\n  invalid() {\n    return new Date(NaN);\n  }\n  /** Creates a date but allows the month and date to overflow. */\n\n\n  _createDateWithOverflow(year, month, date) {\n    // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n    // To work around this we use `setFullYear` and `setHours` instead.\n    const d = new Date();\n    d.setFullYear(year, month, date);\n    d.setHours(0, 0, 0, 0);\n    return d;\n  }\n  /**\n   * Pads a number to make it two digits.\n   * @param n The number to pad.\n   * @returns The padded number.\n   */\n\n\n  _2digit(n) {\n    return ('00' + n).slice(-2);\n  }\n  /**\n   * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n   * other browsers do not. We remove them to make output consistent and because they interfere with\n   * date parsing.\n   * @param str The string to strip direction characters from.\n   * @returns The stripped string.\n   */\n\n\n  _stripDirectionalityCharacters(str) {\n    return str.replace(/[\\u200e\\u200f]/g, '');\n  }\n  /**\n   * When converting Date object to string, javascript built-in functions may return wrong\n   * results because it applies its internal DST rules. The DST rules around the world change\n   * very frequently, and the current valid rule is not always valid in previous years though.\n   * We work around this problem building a new Date object which has its internal UTC\n   * representation with the local date and time.\n   * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n   *    timeZone set to 'utc' to work fine.\n   * @param date Date from which we want to get the string representation according to dtf\n   * @returns A Date object with its UTC representation based on the passed in date info\n   */\n\n\n  _format(dtf, date) {\n    // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n    // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n    const d = new Date();\n    d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n    return dtf.format(d);\n  }\n\n}\n\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) {\n  return new (t || NativeDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(ɵngcc2.Platform));\n};\n\nNativeDateAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: NativeDateAdapter,\n  factory: NativeDateAdapter.ɵfac\n});\n\nNativeDateAdapter.ctorParameters = () => [{\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_DATE_LOCALE]\n  }]\n}, {\n  type: Platform\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateAdapter, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_LOCALE]\n      }]\n    }, {\n      type: ɵngcc2.Platform\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst MAT_NATIVE_DATE_FORMATS = {\n  parse: {\n    dateInput: null\n  },\n  display: {\n    dateInput: {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric'\n    },\n    monthYearLabel: {\n      year: 'numeric',\n      month: 'short'\n    },\n    dateA11yLabel: {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    },\n    monthYearA11yLabel: {\n      year: 'numeric',\n      month: 'long'\n    }\n  }\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nclass NativeDateModule {}\n\nNativeDateModule.ɵfac = function NativeDateModule_Factory(t) {\n  return new (t || NativeDateModule)();\n};\n\nNativeDateModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: NativeDateModule\n});\nNativeDateModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [{\n    provide: DateAdapter,\n    useClass: NativeDateAdapter\n  }],\n  imports: [PlatformModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateModule, [{\n    type: NgModule,\n    args: [{\n      imports: [PlatformModule],\n      providers: [{\n        provide: DateAdapter,\n        useClass: NativeDateAdapter\n      }]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NativeDateModule, {\n    imports: function () {\n      return [PlatformModule];\n    }\n  });\n})();\n\nconst ɵ0 = MAT_NATIVE_DATE_FORMATS;\n\nclass MatNativeDateModule {}\n\nMatNativeDateModule.ɵfac = function MatNativeDateModule_Factory(t) {\n  return new (t || MatNativeDateModule)();\n};\n\nMatNativeDateModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatNativeDateModule\n});\nMatNativeDateModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [{\n    provide: MAT_DATE_FORMATS,\n    useValue: ɵ0\n  }],\n  imports: [NativeDateModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatNativeDateModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NativeDateModule],\n      providers: [{\n        provide: MAT_DATE_FORMATS,\n        useValue: ɵ0\n      }]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatNativeDateModule, {\n    imports: [NativeDateModule]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n\n\nclass ShowOnDirtyErrorStateMatcher {\n  isErrorState(control, form) {\n    return !!(control && control.invalid && (control.dirty || form && form.submitted));\n  }\n\n}\n\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) {\n  return new (t || ShowOnDirtyErrorStateMatcher)();\n};\n\nShowOnDirtyErrorStateMatcher.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: ShowOnDirtyErrorStateMatcher,\n  factory: ShowOnDirtyErrorStateMatcher.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n    type: Injectable\n  }], null, null);\n})();\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n\n\nclass ErrorStateMatcher {\n  isErrorState(control, form) {\n    return !!(control && control.invalid && (control.touched || form && form.submitted));\n  }\n\n}\n\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) {\n  return new (t || ErrorStateMatcher)();\n};\n\nErrorStateMatcher.ɵprov = i0.ɵɵdefineInjectable({\n  factory: function ErrorStateMatcher_Factory() {\n    return new ErrorStateMatcher();\n  },\n  token: ErrorStateMatcher,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ErrorStateMatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\n\n\nclass MatLine {}\n\nMatLine.ɵfac = function MatLine_Factory(t) {\n  return new (t || MatLine)();\n};\n\nMatLine.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatLine,\n  selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]],\n  hostAttrs: [1, \"mat-line\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLine, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-line], [matLine]',\n      host: {\n        'class': 'mat-line'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\n\n\nfunction setLines(lines, element, prefix = 'mat') {\n  // Note: doesn't need to unsubscribe, because `changes`\n  // gets completed by Angular when the view is destroyed.\n  lines.changes.pipe(startWith(lines)).subscribe(({\n    length\n  }) => {\n    setClass(element, `${prefix}-2-line`, false);\n    setClass(element, `${prefix}-3-line`, false);\n    setClass(element, `${prefix}-multi-line`, false);\n\n    if (length === 2 || length === 3) {\n      setClass(element, `${prefix}-${length}-line`, true);\n    } else if (length > 3) {\n      setClass(element, `${prefix}-multi-line`, true);\n    }\n  });\n}\n/** Adds or removes a class from an element. */\n\n\nfunction setClass(element, className, isAdd) {\n  const classList = element.nativeElement.classList;\n  isAdd ? classList.add(className) : classList.remove(className);\n}\n\nclass MatLineModule {}\n\nMatLineModule.ɵfac = function MatLineModule_Factory(t) {\n  return new (t || MatLineModule)();\n};\n\nMatLineModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatLineModule\n});\nMatLineModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [MatCommonModule, MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLineModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatLine, MatCommonModule],\n      declarations: [MatLine]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatLineModule, {\n    declarations: [MatLine],\n    imports: [MatCommonModule],\n    exports: [MatLine, MatCommonModule]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Reference to a previously launched ripple element.\n */\n\n\nclass RippleRef {\n  constructor(_renderer,\n  /** Reference to the ripple HTML element. */\n  element,\n  /** Ripple configuration used for the ripple. */\n  config) {\n    this._renderer = _renderer;\n    this.element = element;\n    this.config = config;\n    /** Current state of the ripple. */\n\n    this.state = 3\n    /* HIDDEN */\n    ;\n  }\n  /** Fades out the ripple element. */\n\n\n  fadeOut() {\n    this._renderer.fadeOutRipple(this);\n  }\n\n} // TODO: import these values from `@material/ripple` eventually.\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\n\n\nconst defaultRippleAnimationConfig = {\n  enterDuration: 225,\n  exitDuration: 150\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\n\nconst ignoreMouseEventsTimeout = 800;\n/** Options that apply to all the event listeners that are bound by the ripple renderer. */\n\nconst passiveEventOptions = normalizePassiveListenerOptions({\n  passive: true\n});\n/** Events that signal that the pointer is down. */\n\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\n\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\n\nclass RippleRenderer {\n  constructor(_target, _ngZone, elementOrElementRef, platform) {\n    this._target = _target;\n    this._ngZone = _ngZone;\n    /** Whether the pointer is currently down or not. */\n\n    this._isPointerDown = false;\n    /** Set of currently active ripple references. */\n\n    this._activeRipples = new Set();\n    /** Whether pointer-up event listeners have been registered. */\n\n    this._pointerUpEventsRegistered = false; // Only do anything if we're on the browser.\n\n    if (platform.isBrowser) {\n      this._containerElement = coerceElement(elementOrElementRef);\n    }\n  }\n  /**\n   * Fades in a ripple at the given coordinates.\n   * @param x Coordinate within the element, along the X axis at which to start the ripple.\n   * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n   * @param config Extra ripple options.\n   */\n\n\n  fadeInRipple(x, y, config = {}) {\n    const containerRect = this._containerRect = this._containerRect || this._containerElement.getBoundingClientRect();\n\n    const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), config.animation);\n\n    if (config.centered) {\n      x = containerRect.left + containerRect.width / 2;\n      y = containerRect.top + containerRect.height / 2;\n    }\n\n    const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n    const offsetX = x - containerRect.left;\n    const offsetY = y - containerRect.top;\n    const duration = animationConfig.enterDuration;\n    const ripple = document.createElement('div');\n    ripple.classList.add('mat-ripple-element');\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`; // If a custom color has been specified, set it as inline style. If no color is\n    // set, the default color will be applied through the ripple theme styles.\n\n    if (config.color != null) {\n      ripple.style.backgroundColor = config.color;\n    }\n\n    ripple.style.transitionDuration = `${duration}ms`;\n\n    this._containerElement.appendChild(ripple); // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical because then the `scale` would not animate properly.\n\n\n    enforceStyleRecalculation(ripple);\n    ripple.style.transform = 'scale(1)'; // Exposed reference to the ripple that will be returned.\n\n    const rippleRef = new RippleRef(this, ripple, config);\n    rippleRef.state = 0\n    /* FADING_IN */\n    ; // Add the ripple reference to the list of all active ripples.\n\n    this._activeRipples.add(rippleRef);\n\n    if (!config.persistent) {\n      this._mostRecentTransientRipple = rippleRef;\n    } // Wait for the ripple element to be completely faded in.\n    // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n\n\n    this._runTimeoutOutsideZone(() => {\n      const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n      rippleRef.state = 1\n      /* VISIBLE */\n      ; // When the timer runs out while the user has kept their pointer down, we want to\n      // keep only the persistent ripples and the latest transient ripple. We do this,\n      // because we don't want stacked transient ripples to appear after their enter\n      // animation has finished.\n\n      if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n        rippleRef.fadeOut();\n      }\n    }, duration);\n\n    return rippleRef;\n  }\n  /** Fades out a ripple reference. */\n\n\n  fadeOutRipple(rippleRef) {\n    const wasActive = this._activeRipples.delete(rippleRef);\n\n    if (rippleRef === this._mostRecentTransientRipple) {\n      this._mostRecentTransientRipple = null;\n    } // Clear out the cached bounding rect if we have no more ripples.\n\n\n    if (!this._activeRipples.size) {\n      this._containerRect = null;\n    } // For ripples that are not active anymore, don't re-run the fade-out animation.\n\n\n    if (!wasActive) {\n      return;\n    }\n\n    const rippleEl = rippleRef.element;\n    const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), rippleRef.config.animation);\n    rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n    rippleEl.style.opacity = '0';\n    rippleRef.state = 2\n    /* FADING_OUT */\n    ; // Once the ripple faded out, the ripple can be safely removed from the DOM.\n\n    this._runTimeoutOutsideZone(() => {\n      rippleRef.state = 3\n      /* HIDDEN */\n      ;\n      rippleEl.parentNode.removeChild(rippleEl);\n    }, animationConfig.exitDuration);\n  }\n  /** Fades out all currently active ripples. */\n\n\n  fadeOutAll() {\n    this._activeRipples.forEach(ripple => ripple.fadeOut());\n  }\n  /** Fades out all currently active non-persistent ripples. */\n\n\n  fadeOutAllNonPersistent() {\n    this._activeRipples.forEach(ripple => {\n      if (!ripple.config.persistent) {\n        ripple.fadeOut();\n      }\n    });\n  }\n  /** Sets up the trigger event listeners */\n\n\n  setupTriggerEvents(elementOrElementRef) {\n    const element = coerceElement(elementOrElementRef);\n\n    if (!element || element === this._triggerElement) {\n      return;\n    } // Remove all previously registered event listeners from the trigger element.\n\n\n    this._removeTriggerEvents();\n\n    this._triggerElement = element;\n\n    this._registerEvents(pointerDownEvents);\n  }\n  /**\n   * Handles all registered events.\n   * @docs-private\n   */\n\n\n  handleEvent(event) {\n    if (event.type === 'mousedown') {\n      this._onMousedown(event);\n    } else if (event.type === 'touchstart') {\n      this._onTouchStart(event);\n    } else {\n      this._onPointerUp();\n    } // If pointer-up events haven't been registered yet, do so now.\n    // We do this on-demand in order to reduce the total number of event listeners\n    // registered by the ripples, which speeds up the rendering time for large UIs.\n\n\n    if (!this._pointerUpEventsRegistered) {\n      this._registerEvents(pointerUpEvents);\n\n      this._pointerUpEventsRegistered = true;\n    }\n  }\n  /** Function being called whenever the trigger is being pressed using mouse. */\n\n\n  _onMousedown(event) {\n    // Screen readers will fire fake mouse events for space/enter. Skip launching a\n    // ripple in this case for consistency with the non-screen-reader experience.\n    const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n    const isSyntheticEvent = this._lastTouchStartEvent && Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n\n    if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n      this._isPointerDown = true;\n      this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n    }\n  }\n  /** Function being called whenever the trigger is being pressed using touch. */\n\n\n  _onTouchStart(event) {\n    if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n      // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n      // events will launch a second ripple if we don't ignore mouse events for a specific\n      // time after a touchstart event.\n      this._lastTouchStartEvent = Date.now();\n      this._isPointerDown = true; // Use `changedTouches` so we skip any touches where the user put\n      // their finger down, but used another finger to tap the element again.\n\n      const touches = event.changedTouches;\n\n      for (let i = 0; i < touches.length; i++) {\n        this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n      }\n    }\n  }\n  /** Function being called whenever the trigger is being released. */\n\n\n  _onPointerUp() {\n    if (!this._isPointerDown) {\n      return;\n    }\n\n    this._isPointerDown = false; // Fade-out all ripples that are visible and not persistent.\n\n    this._activeRipples.forEach(ripple => {\n      // By default, only ripples that are completely visible will fade out on pointer release.\n      // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n      const isVisible = ripple.state === 1\n      /* VISIBLE */\n      || ripple.config.terminateOnPointerUp && ripple.state === 0\n      /* FADING_IN */\n      ;\n\n      if (!ripple.config.persistent && isVisible) {\n        ripple.fadeOut();\n      }\n    });\n  }\n  /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\n\n\n  _runTimeoutOutsideZone(fn, delay = 0) {\n    this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n  }\n  /** Registers event listeners for a given list of events. */\n\n\n  _registerEvents(eventTypes) {\n    this._ngZone.runOutsideAngular(() => {\n      eventTypes.forEach(type => {\n        this._triggerElement.addEventListener(type, this, passiveEventOptions);\n      });\n    });\n  }\n  /** Removes previously registered event listeners from the trigger element. */\n\n\n  _removeTriggerEvents() {\n    if (this._triggerElement) {\n      pointerDownEvents.forEach(type => {\n        this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n      });\n\n      if (this._pointerUpEventsRegistered) {\n        pointerUpEvents.forEach(type => {\n          this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n        });\n      }\n    }\n  }\n\n}\n/** Enforces a style recalculation of a DOM element by computing its styles. */\n\n\nfunction enforceStyleRecalculation(element) {\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n  window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\n\n\nfunction distanceToFurthestCorner(x, y, rect) {\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Injection token that can be used to specify the global ripple options. */\n\n\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\n\nclass MatRipple {\n  constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n    this._elementRef = _elementRef;\n    this._animationMode = _animationMode;\n    /**\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\n     * bounding rectangle.\n     */\n\n    this.radius = 0;\n    this._disabled = false;\n    /** Whether ripple directive is initialized and the input bindings are set. */\n\n    this._isInitialized = false;\n    this._globalOptions = globalOptions || {};\n    this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n  }\n  /**\n   * Whether click events will not trigger the ripple. Ripples can be still launched manually\n   * by using the `launch()` method.\n   */\n\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(value) {\n    if (value) {\n      this.fadeOutAllNonPersistent();\n    }\n\n    this._disabled = value;\n\n    this._setupTriggerEventsIfEnabled();\n  }\n  /**\n   * The element that triggers the ripple when click events are received.\n   * Defaults to the directive's host element.\n   */\n\n\n  get trigger() {\n    return this._trigger || this._elementRef.nativeElement;\n  }\n\n  set trigger(trigger) {\n    this._trigger = trigger;\n\n    this._setupTriggerEventsIfEnabled();\n  }\n\n  ngOnInit() {\n    this._isInitialized = true;\n\n    this._setupTriggerEventsIfEnabled();\n  }\n\n  ngOnDestroy() {\n    this._rippleRenderer._removeTriggerEvents();\n  }\n  /** Fades out all currently showing ripple elements. */\n\n\n  fadeOutAll() {\n    this._rippleRenderer.fadeOutAll();\n  }\n  /** Fades out all currently showing non-persistent ripple elements. */\n\n\n  fadeOutAllNonPersistent() {\n    this._rippleRenderer.fadeOutAllNonPersistent();\n  }\n  /**\n   * Ripple configuration from the directive's input values.\n   * @docs-private Implemented as part of RippleTarget\n   */\n\n\n  get rippleConfig() {\n    return {\n      centered: this.centered,\n      radius: this.radius,\n      color: this.color,\n      animation: Object.assign(Object.assign(Object.assign({}, this._globalOptions.animation), this._animationMode === 'NoopAnimations' ? {\n        enterDuration: 0,\n        exitDuration: 0\n      } : {}), this.animation),\n      terminateOnPointerUp: this._globalOptions.terminateOnPointerUp\n    };\n  }\n  /**\n   * Whether ripples on pointer-down are disabled or not.\n   * @docs-private Implemented as part of RippleTarget\n   */\n\n\n  get rippleDisabled() {\n    return this.disabled || !!this._globalOptions.disabled;\n  }\n  /** Sets up the trigger event listeners if ripples are enabled. */\n\n\n  _setupTriggerEventsIfEnabled() {\n    if (!this.disabled && this._isInitialized) {\n      this._rippleRenderer.setupTriggerEvents(this.trigger);\n    }\n  }\n  /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n\n\n  launch(configOrX, y = 0, config) {\n    if (typeof configOrX === 'number') {\n      return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign(Object.assign({}, this.rippleConfig), config));\n    } else {\n      return this._rippleRenderer.fadeInRipple(0, 0, Object.assign(Object.assign({}, this.rippleConfig), configOrX));\n    }\n  }\n\n}\n\nMatRipple.ɵfac = function MatRipple_Factory(t) {\n  return new (t || MatRipple)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatRipple.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatRipple,\n  selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]],\n  hostAttrs: [1, \"mat-ripple\"],\n  hostVars: 2,\n  hostBindings: function MatRipple_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n    }\n  },\n  inputs: {\n    radius: [\"matRippleRadius\", \"radius\"],\n    disabled: [\"matRippleDisabled\", \"disabled\"],\n    trigger: [\"matRippleTrigger\", \"trigger\"],\n    color: [\"matRippleColor\", \"color\"],\n    unbounded: [\"matRippleUnbounded\", \"unbounded\"],\n    centered: [\"matRippleCentered\", \"centered\"],\n    animation: [\"matRippleAnimation\", \"animation\"]\n  },\n  exportAs: [\"matRipple\"]\n});\n\nMatRipple.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: NgZone\n}, {\n  type: Platform\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\n\nMatRipple.propDecorators = {\n  color: [{\n    type: Input,\n    args: ['matRippleColor']\n  }],\n  unbounded: [{\n    type: Input,\n    args: ['matRippleUnbounded']\n  }],\n  centered: [{\n    type: Input,\n    args: ['matRippleCentered']\n  }],\n  radius: [{\n    type: Input,\n    args: ['matRippleRadius']\n  }],\n  animation: [{\n    type: Input,\n    args: ['matRippleAnimation']\n  }],\n  disabled: [{\n    type: Input,\n    args: ['matRippleDisabled']\n  }],\n  trigger: [{\n    type: Input,\n    args: ['matRippleTrigger']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRipple, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-ripple], [matRipple]',\n      exportAs: 'matRipple',\n      host: {\n        'class': 'mat-ripple',\n        '[class.mat-ripple-unbounded]': 'unbounded'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc2.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    radius: [{\n      type: Input,\n      args: ['matRippleRadius']\n    }],\n    disabled: [{\n      type: Input,\n      args: ['matRippleDisabled']\n    }],\n    trigger: [{\n      type: Input,\n      args: ['matRippleTrigger']\n    }],\n    color: [{\n      type: Input,\n      args: ['matRippleColor']\n    }],\n    unbounded: [{\n      type: Input,\n      args: ['matRippleUnbounded']\n    }],\n    centered: [{\n      type: Input,\n      args: ['matRippleCentered']\n    }],\n    animation: [{\n      type: Input,\n      args: ['matRippleAnimation']\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nclass MatRippleModule {}\n\nMatRippleModule.ɵfac = function MatRippleModule_Factory(t) {\n  return new (t || MatRippleModule)();\n};\n\nMatRippleModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatRippleModule\n});\nMatRippleModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [MatCommonModule, PlatformModule, MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRippleModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, PlatformModule],\n      exports: [MatRipple, MatCommonModule],\n      declarations: [MatRipple]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRippleModule, {\n    declarations: function () {\n      return [MatRipple];\n    },\n    imports: function () {\n      return [MatCommonModule, PlatformModule];\n    },\n    exports: function () {\n      return [MatRipple, MatCommonModule];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n\n\nclass MatPseudoCheckbox {\n  constructor(_animationMode) {\n    this._animationMode = _animationMode;\n    /** Display state of the checkbox. */\n\n    this.state = 'unchecked';\n    /** Whether the checkbox is disabled. */\n\n    this.disabled = false;\n  }\n\n}\n\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) {\n  return new (t || MatPseudoCheckbox)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatPseudoCheckbox.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatPseudoCheckbox,\n  selectors: [[\"mat-pseudo-checkbox\"]],\n  hostAttrs: [1, \"mat-pseudo-checkbox\"],\n  hostVars: 8,\n  hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  },\n  inputs: {\n    state: \"state\",\n    disabled: \"disabled\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function MatPseudoCheckbox_Template(rf, ctx) {},\n  styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatPseudoCheckbox.ctorParameters = () => [{\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\n\nMatPseudoCheckbox.propDecorators = {\n  state: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'mat-pseudo-checkbox',\n      template: '',\n      host: {\n        'class': 'mat-pseudo-checkbox',\n        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n      },\n      styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    state: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nclass MatPseudoCheckboxModule {}\n\nMatPseudoCheckboxModule.ɵfac = function MatPseudoCheckboxModule_Factory(t) {\n  return new (t || MatPseudoCheckboxModule)();\n};\n\nMatPseudoCheckboxModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatPseudoCheckboxModule\n});\nMatPseudoCheckboxModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatPseudoCheckbox],\n      declarations: [MatPseudoCheckbox]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPseudoCheckboxModule, {\n    declarations: [MatPseudoCheckbox],\n    imports: [MatCommonModule],\n    exports: [MatPseudoCheckbox]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injection token used to provide the parent component to options.\n */\n\n\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n// Boilerplate for applying mixins to MatOptgroup.\n\n/** @docs-private */\n\nconst _MatOptgroupMixinBase = mixinDisabled(class {}); // Counter for unique group ids.\n\n\nlet _uniqueOptgroupIdCounter = 0;\n\nclass _MatOptgroupBase extends _MatOptgroupMixinBase {\n  constructor(parent) {\n    var _a;\n\n    super();\n    /** Unique id for the underlying label. */\n\n    this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n    this._inert = (_a = parent === null || parent === void 0 ? void 0 : parent.inertGroups) !== null && _a !== void 0 ? _a : false;\n  }\n\n}\n\n_MatOptgroupBase.ɵfac = function _MatOptgroupBase_Factory(t) {\n  return new (t || _MatOptgroupBase)(ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8));\n};\n\n_MatOptgroupBase.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: _MatOptgroupBase,\n  inputs: {\n    label: \"label\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\n_MatOptgroupBase.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_OPTION_PARENT_COMPONENT]\n  }, {\n    type: Optional\n  }]\n}];\n\n_MatOptgroupBase.propDecorators = {\n  label: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatOptgroupBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_OPTION_PARENT_COMPONENT]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    label: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\n\n\nconst MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\n\nclass MatOptgroup extends _MatOptgroupBase {}\n\nMatOptgroup.ɵfac = /*@__PURE__*/function () {\n  let ɵMatOptgroup_BaseFactory;\n  return function MatOptgroup_Factory(t) {\n    return (ɵMatOptgroup_BaseFactory || (ɵMatOptgroup_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatOptgroup)))(t || MatOptgroup);\n  };\n}();\n\nMatOptgroup.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatOptgroup,\n  selectors: [[\"mat-optgroup\"]],\n  hostAttrs: [1, \"mat-optgroup\"],\n  hostVars: 5,\n  hostBindings: function MatOptgroup_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"role\", ctx._inert ? null : \"group\")(\"aria-disabled\", ctx._inert ? null : ctx.disabled.toString())(\"aria-labelledby\", ctx._inert ? null : ctx._labelId);\n      ɵngcc0.ɵɵclassProp(\"mat-optgroup-disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\"\n  },\n  exportAs: [\"matOptgroup\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_OPTGROUP,\n    useExisting: MatOptgroup\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 4,\n  vars: 2,\n  consts: [[\"aria-hidden\", \"true\", 1, \"mat-optgroup-label\", 3, \"id\"]],\n  template: function MatOptgroup_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c0);\n      ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n      ɵngcc0.ɵɵtext(1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵprojection(3, 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"id\", ctx._labelId);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n    }\n  },\n  styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptgroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-optgroup',\n      exportAs: 'matOptgroup',\n      template: \"<span class=\\\"mat-optgroup-label\\\" aria-hidden=\\\"true\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></span>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      inputs: ['disabled'],\n      host: {\n        'class': 'mat-optgroup',\n        '[attr.role]': '_inert ? null : \"group\"',\n        '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n        '[attr.aria-labelledby]': '_inert ? null : _labelId',\n        '[class.mat-optgroup-disabled]': 'disabled'\n      },\n      providers: [{\n        provide: MAT_OPTGROUP,\n        useExisting: MatOptgroup\n      }],\n      styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\n\n\nlet _uniqueIdCounter = 0;\n/** Event object emitted by MatOption when selected or deselected. */\n\nclass MatOptionSelectionChange {\n  constructor(\n  /** Reference to the option that emitted the event. */\n  source,\n  /** Whether the change in the option's value was a result of a user action. */\n  isUserInput = false) {\n    this.source = source;\n    this.isUserInput = isUserInput;\n  }\n\n}\n\nclass _MatOptionBase {\n  constructor(_element, _changeDetectorRef, _parent, group) {\n    this._element = _element;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._parent = _parent;\n    this.group = group;\n    this._selected = false;\n    this._active = false;\n    this._disabled = false;\n    this._mostRecentViewValue = '';\n    /** The unique ID of the option. */\n\n    this.id = `mat-option-${_uniqueIdCounter++}`;\n    /** Event emitted when the option is selected or deselected. */\n    // tslint:disable-next-line:no-output-on-prefix\n\n    this.onSelectionChange = new EventEmitter();\n    /** Emits when the state of the option changes and any parents have to be notified. */\n\n    this._stateChanges = new Subject();\n  }\n  /** Whether the wrapping component is in multiple selection mode. */\n\n\n  get multiple() {\n    return this._parent && this._parent.multiple;\n  }\n  /** Whether or not the option is currently selected. */\n\n\n  get selected() {\n    return this._selected;\n  }\n  /** Whether the option is disabled. */\n\n\n  get disabled() {\n    return this.group && this.group.disabled || this._disabled;\n  }\n\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  /** Whether ripples for the option are disabled. */\n\n\n  get disableRipple() {\n    return this._parent && this._parent.disableRipple;\n  }\n  /**\n   * Whether or not the option is currently active and ready to be selected.\n   * An active option displays styles as if it is focused, but the\n   * focus is actually retained somewhere else. This comes in handy\n   * for components like autocomplete where focus must remain on the input.\n   */\n\n\n  get active() {\n    return this._active;\n  }\n  /**\n   * The displayed value of the option. It is necessary to show the selected option in the\n   * select's trigger.\n   */\n\n\n  get viewValue() {\n    // TODO(kara): Add input property alternative for node envs.\n    return (this._getHostElement().textContent || '').trim();\n  }\n  /** Selects the option. */\n\n\n  select() {\n    if (!this._selected) {\n      this._selected = true;\n\n      this._changeDetectorRef.markForCheck();\n\n      this._emitSelectionChangeEvent();\n    }\n  }\n  /** Deselects the option. */\n\n\n  deselect() {\n    if (this._selected) {\n      this._selected = false;\n\n      this._changeDetectorRef.markForCheck();\n\n      this._emitSelectionChangeEvent();\n    }\n  }\n  /** Sets focus onto this option. */\n\n\n  focus(_origin, options) {\n    // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n    // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n    const element = this._getHostElement();\n\n    if (typeof element.focus === 'function') {\n      element.focus(options);\n    }\n  }\n  /**\n   * This method sets display styles on the option to make it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n\n\n  setActiveStyles() {\n    if (!this._active) {\n      this._active = true;\n\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * This method removes display styles on the option that made it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n\n\n  setInactiveStyles() {\n    if (this._active) {\n      this._active = false;\n\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /** Gets the label to be used when determining whether the option should be focused. */\n\n\n  getLabel() {\n    return this.viewValue;\n  }\n  /** Ensures the option is selected when activated from the keyboard. */\n\n\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n      this._selectViaInteraction(); // Prevent the page from scrolling down and form submits.\n\n\n      event.preventDefault();\n    }\n  }\n  /**\n   * `Selects the option while indicating the selection came from the user. Used to\n   * determine if the select's view -> model callback should be invoked.`\n   */\n\n\n  _selectViaInteraction() {\n    if (!this.disabled) {\n      this._selected = this.multiple ? !this._selected : true;\n\n      this._changeDetectorRef.markForCheck();\n\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n  /**\n   * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n   * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n   * attributes adds a significant amount of noise to screen-reader users without providing useful\n   * information.\n   */\n\n\n  _getAriaSelected() {\n    return this.selected || (this.multiple ? false : null);\n  }\n  /** Returns the correct tabindex for the option depending on disabled state. */\n\n\n  _getTabIndex() {\n    return this.disabled ? '-1' : '0';\n  }\n  /** Gets the host DOM element. */\n\n\n  _getHostElement() {\n    return this._element.nativeElement;\n  }\n\n  ngAfterViewChecked() {\n    // Since parent components could be using the option's label to display the selected values\n    // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n    // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n    // relatively cheap, however we still limit them only to selected options in order to avoid\n    // hitting the DOM too often.\n    if (this._selected) {\n      const viewValue = this.viewValue;\n\n      if (viewValue !== this._mostRecentViewValue) {\n        this._mostRecentViewValue = viewValue;\n\n        this._stateChanges.next();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n  /** Emits the selection change event. */\n\n\n  _emitSelectionChangeEvent(isUserInput = false) {\n    this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n  }\n\n}\n\n_MatOptionBase.ɵfac = function _MatOptionBase_Factory(t) {\n  return new (t || _MatOptionBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(_MatOptgroupBase));\n};\n\n_MatOptionBase.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: _MatOptionBase,\n  inputs: {\n    id: \"id\",\n    disabled: \"disabled\",\n    value: \"value\"\n  },\n  outputs: {\n    onSelectionChange: \"onSelectionChange\"\n  }\n});\n\n_MatOptionBase.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: undefined\n}, {\n  type: _MatOptgroupBase\n}];\n\n_MatOptionBase.propDecorators = {\n  value: [{\n    type: Input\n  }],\n  id: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  onSelectionChange: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatOptionBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined\n    }, {\n      type: _MatOptgroupBase\n    }];\n  }, {\n    id: [{\n      type: Input\n    }],\n    onSelectionChange: [{\n      type: Output\n    }],\n    disabled: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Single option inside of a `<mat-select>` element.\n */\n\n\nclass MatOption extends _MatOptionBase {\n  constructor(element, changeDetectorRef, parent, group) {\n    super(element, changeDetectorRef, parent, group);\n  }\n\n}\n\nMatOption.ɵfac = function MatOption_Factory(t) {\n  return new (t || MatOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_OPTGROUP, 8));\n};\n\nMatOption.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatOption,\n  selectors: [[\"mat-option\"]],\n  hostAttrs: [\"role\", \"option\", 1, \"mat-option\", \"mat-focus-indicator\"],\n  hostVars: 12,\n  hostBindings: function MatOption_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() {\n        return ctx._selectViaInteraction();\n      })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) {\n        return ctx._handleKeydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n      ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx._getAriaSelected())(\"aria-disabled\", ctx.disabled.toString());\n      ɵngcc0.ɵɵclassProp(\"mat-selected\", ctx.selected)(\"mat-option-multiple\", ctx.multiple)(\"mat-active\", ctx.active)(\"mat-option-disabled\", ctx.disabled);\n    }\n  },\n  exportAs: [\"matOption\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c2,\n  decls: 5,\n  vars: 4,\n  consts: [[\"class\", \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-option-text\"], [\"class\", \"cdk-visually-hidden\", 4, \"ngIf\"], [\"mat-ripple\", \"\", 1, \"mat-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\"], [1, \"cdk-visually-hidden\"]],\n  template: function MatOption_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(3, MatOption_span_3_Template, 2, 1, \"span\", 2);\n      ɵngcc0.ɵɵelement(4, \"div\", 3);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.group && ctx.group._inert);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n    }\n  },\n  dependencies: [MatRipple, ɵngcc3.NgIf, MatPseudoCheckbox],\n  styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatOption.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_OPTION_PARENT_COMPONENT]\n  }]\n}, {\n  type: MatOptgroup,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_OPTGROUP]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOption, [{\n    type: Component,\n    args: [{\n      selector: 'mat-option',\n      exportAs: 'matOption',\n      host: {\n        'role': 'option',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mat-selected]': 'selected',\n        '[class.mat-option-multiple]': 'multiple',\n        '[class.mat-active]': 'active',\n        '[id]': 'id',\n        '[attr.aria-selected]': '_getAriaSelected()',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[class.mat-option-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        'class': 'mat-option mat-focus-indicator'\n      },\n      template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_OPTION_PARENT_COMPONENT]\n      }]\n    }, {\n      type: MatOptgroup,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_OPTGROUP]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\n\n\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n  if (optionGroups.length) {\n    let optionsArray = options.toArray();\n    let groups = optionGroups.toArray();\n    let groupCounter = 0;\n\n    for (let i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n\n    return groupCounter;\n  }\n\n  return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\n\n\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n\n  return currentScrollPosition;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nclass MatOptionModule {}\n\nMatOptionModule.ɵfac = function MatOptionModule_Factory(t) {\n  return new (t || MatOptionModule)();\n};\n\nMatOptionModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatOptionModule\n});\nMatOptionModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule],\n      exports: [MatOption, MatOptgroup],\n      declarations: [MatOption, MatOptgroup]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatOptionModule, {\n    declarations: function () {\n      return [MatOption, MatOptgroup];\n    },\n    imports: function () {\n      return [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule];\n    },\n    exports: function () {\n      return [MatOption, MatOptgroup];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AnimationCurves, AnimationDurations, DateAdapter, ErrorStateMatcher, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatLine, MatLineModule, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NativeDateAdapter, NativeDateModule, RippleRef, RippleRenderer, ShowOnDirtyErrorStateMatcher, VERSION$1 as VERSION, _MatOptgroupBase, _MatOptionBase, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines, ɵ0, MATERIAL_SANITY_CHECKS_FACTORY as ɵangular_material_src_material_core_core_a };","map":{"version":3,"names":["i0","Version","InjectionToken","isDevMode","NgModule","Optional","Inject","inject","LOCALE_ID","Injectable","Directive","ElementRef","NgZone","Input","Component","ViewEncapsulation","ChangeDetectionStrategy","EventEmitter","ChangeDetectorRef","Output","HighContrastModeDetector","isFakeMousedownFromScreenReader","isFakeTouchstartFromScreenReader","BidiModule","VERSION","VERSION$2","DOCUMENT","CommonModule","_isTestEnvironment","Platform","PlatformModule","normalizePassiveListenerOptions","coerceBooleanProperty","coerceNumberProperty","coerceElement","Subject","Observable","startWith","ANIMATION_MODULE_TYPE","ENTER","SPACE","hasModifierKey","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","_c0","_c1","MatOption_mat_pseudo_checkbox_0_Template","rf","ctx","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵproperty","selected","disabled","MatOption_span_3_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r1","ɵɵadvance","ɵɵtextInterpolate1","group","label","_c2","VERSION$1","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","MATERIAL_SANITY_CHECKS_FACTORY","MATERIAL_SANITY_CHECKS","providedIn","factory","MatCommonModule","constructor","highContrastModeDetector","sanityChecks","document","_hasDoneGlobalChecks","_document","_applyBodyHighContrastModeCssClasses","_sanityChecks","_checkDoctypeIsDefined","_checkThemeIsPresent","_checkCdkVersionMatch","_checkIsEnabled","name","doctype","console","warn","body","getComputedStyle","testElement","createElement","classList","add","appendChild","computedStyle","display","removeChild","full","ɵfac","MatCommonModule_Factory","t","ɵɵinject","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","imports","ctorParameters","undefined","decorators","args","ngDevMode","ɵsetClassMetadata","exports","ngJitMode","ɵɵsetNgModuleScope","mixinDisabled","base","_disabled","value","mixinColor","defaultColor","color","_color","colorPalette","_elementRef","nativeElement","remove","mixinDisableRipple","_disableRipple","disableRipple","mixinTabIndex","defaultTabIndex","_tabIndex","tabIndex","mixinErrorState","stateChanges","errorState","updateErrorState","oldState","parent","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","control","ngControl","newState","isErrorState","next","mixinInitialized","_isInitialized","_pendingSubscribers","initialized","subscriber","_notifySubscriber","push","_markInitialized","Error","forEach","complete","MAT_DATE_LOCALE","MAT_DATE_LOCALE_FACTORY","DateAdapter","_localeChanges","localeChanges","getValidDateOrNull","obj","isDateInstance","isValid","deserialize","invalid","setLocale","locale","compareDate","first","second","getYear","getMonth","getDate","sameDate","firstValid","secondValid","clampDate","date","min","max","MAT_DATE_FORMATS","SUPPORTS_INTL_API","Intl","_a","DEFAULT_MONTH_NAMES","ɵ0$1","i","String","DEFAULT_DATE_NAMES","range","DEFAULT_DAY_OF_WEEK_NAMES","ISO_8601_REGEX","length","valueFunction","valuesArray","Array","NativeDateAdapter","matDateLocale","platform","useUtcForDisplay","TRIDENT","_clampDate","EDGE","getFullYear","getDayOfWeek","getDay","getMonthNames","style","dtf","DateTimeFormat","month","timeZone","_stripDirectionalityCharacters","_format","Date","getDateNames","day","getDayOfWeekNames","weekday","getYearName","year","getFirstDayOfWeek","getNumDaysInMonth","_createDateWithOverflow","clone","getTime","createDate","result","today","parse","format","displayFormat","setFullYear","Math","Object","assign","toDateString","addCalendarYears","years","addCalendarMonths","months","newDate","addCalendarDays","days","toIso8601","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","join","test","isNaN","NaN","d","setHours","n","slice","str","replace","setUTCFullYear","setUTCHours","getHours","getMinutes","getSeconds","getMilliseconds","NativeDateAdapter_Factory","ɵprov","ɵɵdefineInjectable","token","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","NativeDateModule_Factory","providers","provide","useClass","ɵ0","MatNativeDateModule","MatNativeDateModule_Factory","useValue","ShowOnDirtyErrorStateMatcher","form","dirty","submitted","ShowOnDirtyErrorStateMatcher_Factory","ErrorStateMatcher","touched","ErrorStateMatcher_Factory","MatLine","MatLine_Factory","ɵdir","ɵɵdefineDirective","selectors","hostAttrs","selector","host","setLines","lines","element","prefix","changes","pipe","subscribe","setClass","className","isAdd","MatLineModule","MatLineModule_Factory","declarations","RippleRef","_renderer","config","state","fadeOut","fadeOutRipple","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","passiveEventOptions","passive","pointerDownEvents","pointerUpEvents","RippleRenderer","_target","_ngZone","elementOrElementRef","_isPointerDown","_activeRipples","Set","_pointerUpEventsRegistered","isBrowser","_containerElement","fadeInRipple","x","y","containerRect","_containerRect","getBoundingClientRect","animationConfig","animation","centered","left","width","top","height","radius","distanceToFurthestCorner","offsetX","offsetY","duration","ripple","backgroundColor","transitionDuration","enforceStyleRecalculation","transform","rippleRef","persistent","_mostRecentTransientRipple","_runTimeoutOutsideZone","isMostRecentTransientRipple","wasActive","delete","size","rippleEl","opacity","parentNode","fadeOutAll","fadeOutAllNonPersistent","setupTriggerEvents","_triggerElement","_removeTriggerEvents","_registerEvents","handleEvent","event","_onMousedown","_onTouchStart","_onPointerUp","isFakeMousedown","isSyntheticEvent","_lastTouchStartEvent","now","rippleDisabled","clientX","clientY","rippleConfig","touches","changedTouches","isVisible","terminateOnPointerUp","fn","delay","runOutsideAngular","setTimeout","eventTypes","addEventListener","removeEventListener","window","getPropertyValue","rect","distX","abs","right","distY","bottom","sqrt","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","ngZone","globalOptions","_animationMode","_globalOptions","_rippleRenderer","_setupTriggerEventsIfEnabled","trigger","_trigger","ngOnInit","ngOnDestroy","launch","configOrX","MatRipple_Factory","ɵɵdirectiveInject","hostVars","hostBindings","MatRipple_HostBindings","ɵɵclassProp","unbounded","inputs","exportAs","propDecorators","MatRippleModule","MatRippleModule_Factory","MatPseudoCheckbox","MatPseudoCheckbox_Factory","ɵcmp","ɵɵdefineComponent","MatPseudoCheckbox_HostBindings","decls","vars","template","MatPseudoCheckbox_Template","styles","encapsulation","changeDetection","None","OnPush","MatPseudoCheckboxModule","MatPseudoCheckboxModule_Factory","MAT_OPTION_PARENT_COMPONENT","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","_MatOptgroupBase","_labelId","_inert","inertGroups","_MatOptgroupBase_Factory","features","ɵɵInheritDefinitionFeature","MAT_OPTGROUP","MatOptgroup","ɵMatOptgroup_BaseFactory","MatOptgroup_Factory","ɵɵgetInheritedFactory","MatOptgroup_HostBindings","ɵɵattribute","toString","ɵɵProvidersFeature","useExisting","ngContentSelectors","consts","MatOptgroup_Template","ɵɵprojectionDef","ɵɵprojection","_uniqueIdCounter","MatOptionSelectionChange","source","isUserInput","_MatOptionBase","_element","_changeDetectorRef","_parent","_selected","_active","_mostRecentViewValue","id","onSelectionChange","_stateChanges","multiple","active","viewValue","_getHostElement","textContent","trim","select","markForCheck","_emitSelectionChangeEvent","deselect","focus","_origin","options","setActiveStyles","setInactiveStyles","getLabel","_handleKeydown","keyCode","_selectViaInteraction","preventDefault","_getAriaSelected","_getTabIndex","ngAfterViewChecked","emit","_MatOptionBase_Factory","outputs","MatOption","changeDetectorRef","MatOption_Factory","MatOption_HostBindings","ɵɵlistener","MatOption_click_HostBindingHandler","MatOption_keydown_HostBindingHandler","$event","ɵɵhostProperty","MatOption_Template","ɵɵtemplate","dependencies","NgIf","_countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","toArray","groups","groupCounter","_getOptionScrollPosition","optionOffset","optionHeight","currentScrollPosition","panelHeight","MatOptionModule","MatOptionModule_Factory","ɵangular_material_src_material_core_core_a"],"sources":["C:/Team-43-IMOS/Team-43-IMOS/Imos/node_modules/@angular/material/__ivy_ngcc__/fesm2015/core.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Version, InjectionToken, isDevMode, NgModule, Optional, Inject, inject, LOCALE_ID, Injectable, Directive, ElementRef, NgZone, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, ChangeDetectorRef, Output } from '@angular/core';\nimport { HighContrastModeDetector, isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$2 } from '@angular/cdk';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { _isTestEnvironment, Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of Angular Material. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 4);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n} }\nfunction MatOption_span_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"(\", ctx_r1.group.label, \")\");\n} }\nconst _c2 = [\"*\"];\nconst VERSION$1 = new Version('12.2.13');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nclass AnimationCurves {\n}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/** @docs-private */\nclass AnimationDurations {\n}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Private version constant to circumvent test/build issues,\n// i.e. avoid core to depend on the @angular/material primary entry-point\n// Can be removed once the Material primary entry-point no longer\n// re-exports all secondary entry-points\nconst VERSION = new Version('12.2.13');\n/** @docs-private */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/** Injection token that configures whether the Material sanity checks are enabled. */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    constructor(highContrastModeDetector, sanityChecks, document) {\n        /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n        this._hasDoneGlobalChecks = false;\n        this._document = document;\n        // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n        // in MatCommonModule.\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n        // Note that `_sanityChecks` is typed to `any`, because AoT\n        // throws an error if we use the `SanityChecks` type directly.\n        this._sanityChecks = sanityChecks;\n        if (!this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._checkCdkVersionMatch();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n    /** Gets whether a specific sanity check is enabled. */\n    _checkIsEnabled(name) {\n        // TODO(crisbeto): we can't use `ngDevMode` here yet, because ViewEngine apps might not support\n        // it. Since these checks can have performance implications and they aren't tree shakeable\n        // in their current form, we can leave the `isDevMode` check in for now.\n        // tslint:disable-next-line:ban\n        if (!isDevMode() || _isTestEnvironment()) {\n            return false;\n        }\n        if (typeof this._sanityChecks === 'boolean') {\n            return this._sanityChecks;\n        }\n        return !!this._sanityChecks[name];\n    }\n    _checkDoctypeIsDefined() {\n        if (this._checkIsEnabled('doctype') && !this._document.doctype) {\n            console.warn('Current document does not have a doctype. This may cause ' +\n                'some Angular Material components not to behave as expected.');\n        }\n    }\n    _checkThemeIsPresent() {\n        // We need to assert that the `body` is defined, because these checks run very early\n        // and the `body` won't be defined if the consumer put their scripts in the `head`.\n        if (!this._checkIsEnabled('theme') || !this._document.body ||\n            typeof getComputedStyle !== 'function') {\n            return;\n        }\n        const testElement = this._document.createElement('div');\n        testElement.classList.add('mat-theme-loaded-marker');\n        this._document.body.appendChild(testElement);\n        const computedStyle = getComputedStyle(testElement);\n        // In some situations the computed style of the test element can be null. For example in\n        // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n        if (computedStyle && computedStyle.display !== 'none') {\n            console.warn('Could not find Angular Material core theme. Most Material ' +\n                'components may not work as expected. For more info refer ' +\n                'to the theming guide: https://material.angular.io/guide/theming');\n        }\n        this._document.body.removeChild(testElement);\n    }\n    /** Checks whether the material version matches the cdk version */\n    _checkCdkVersionMatch() {\n        if (this._checkIsEnabled('version') && VERSION.full !== VERSION$2.full) {\n            console.warn('The Angular Material version (' + VERSION.full + ') does not match ' +\n                'the Angular CDK version (' + VERSION$2.full + ').\\n' +\n                'Please ensure the versions of these two packages exactly match.');\n        }\n    }\n}\nMatCommonModule.ɵfac = function MatCommonModule_Factory(t) { return new (t || MatCommonModule)(ɵngcc0.ɵɵinject(ɵngcc1.HighContrastModeDetector), ɵngcc0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), ɵngcc0.ɵɵinject(DOCUMENT)); };\nMatCommonModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatCommonModule });\nMatCommonModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [BidiModule, BidiModule] });\nMatCommonModule.ctorParameters = () => [\n    { type: HighContrastModeDetector },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCommonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [BidiModule]\n            }]\n    }], function () { return [{ type: ɵngcc1.HighContrastModeDetector }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MATERIAL_SANITY_CHECKS]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCommonModule, { imports: function () { return [BidiModule]; }, exports: function () { return [BidiModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinDisabled(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n        get disabled() { return this._disabled; }\n        set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this.defaultColor = defaultColor;\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n        get color() { return this._color; }\n        set color(value) {\n            const colorPalette = value || this.defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinDisableRipple(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n        /** Whether the ripple effect is disabled or not. */\n        get disableRipple() { return this._disableRipple; }\n        set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n            this.defaultTabIndex = defaultTabIndex;\n        }\n        get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinErrorState(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            // This class member exists as an interop with `MatFormFieldControl` which expects\n            // a public `stateChanges` observable to emit whenever the form field should be updated.\n            // The description is not specifically mentioning the error state, as classes using this\n            // mixin can/should emit an event in other cases too.\n            /** Emits whenever the component state changes. */\n            this.stateChanges = new Subject();\n            /** Whether the component is in an error state. */\n            this.errorState = false;\n        }\n        /** Updates the error state based on the provided error state matcher. */\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control : null;\n            const newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\nfunction mixinInitialized(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            /** Whether this directive has been marked as initialized. */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable(subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    this._pendingSubscribers.push(subscriber);\n                }\n            });\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * @docs-private\n         */\n        _markInitialized() {\n            if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true;\n            this._pendingSubscribers.forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /** Emits and completes the subscriber stream (should only emit once). */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** InjectionToken for datepicker that can be used to override default locale code. */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/** @docs-private */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n        /** A stream that emits when the locale changes. */\n        this.localeChanges = this._localeChanges;\n    }\n    /**\n     * Given a potential date object, returns that same date object if it is\n     * a valid date, or `null` if it's not a valid date.\n     * @param obj The object to check.\n     * @returns A date or `null`.\n     */\n    getValidDateOrNull(obj) {\n        return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n    }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param value The value to be deserialized into a date object.\n     * @returns The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param locale The new locale.\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param first The first date to compare.\n     * @param second The second date to compare.\n     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second);\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param first The first date to check.\n     * @param second The second date to check.\n     * @returns Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            let firstValid = this.isValid(first);\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param date The date to clamp.\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/** Whether the browser supports the Intl API. */\nlet SUPPORTS_INTL_API;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    SUPPORTS_INTL_API = typeof Intl != 'undefined';\n}\ncatch (_a) {\n    SUPPORTS_INTL_API = false;\n}\n/** The default month names to use if Intl API is not available. */\nconst DEFAULT_MONTH_NAMES = {\n    'long': [\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n    ],\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nconst ɵ0$1 = i => String(i + 1);\n/** The default date names to use if Intl API is not available. */\nconst DEFAULT_DATE_NAMES = range(31, ɵ0$1);\n/** The default day of the week names to use if Intl API is not available. */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\nclass NativeDateAdapter extends DateAdapter {\n    constructor(matDateLocale, platform) {\n        super();\n        /**\n         * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n         * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n         * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n         * will produce `'8/13/1800'`.\n         *\n         * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n         * getting the string representation of a Date object from its utc representation. We're keeping\n         * it here for sometime, just for precaution, in case we decide to revert some of these changes\n         * though.\n         */\n        this.useUtcForDisplay = true;\n        super.setLocale(matDateLocale);\n        // IE does its own time zone correction, so we disable this on IE.\n        this.useUtcForDisplay = !platform.TRIDENT;\n        this._clampDate = platform.TRIDENT || platform.EDGE;\n    }\n    getYear(date) {\n        return date.getFullYear();\n    }\n    getMonth(date) {\n        return date.getMonth();\n    }\n    getDate(date) {\n        return date.getDate();\n    }\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    getMonthNames(style) {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n            return range(12, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    }\n    getDateNames() {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n            return range(31, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n        }\n        return DEFAULT_DATE_NAMES;\n    }\n    getDayOfWeekNames(style) {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n            return range(7, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n        }\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n    getYearName(date) {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return String(this.getYear(date));\n    }\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    createDate(year, month, date) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            // Check for invalid month and date (except upper bound on date which we have to check after\n            // creating the Date).\n            if (month < 0 || month > 11) {\n                throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n            }\n            if (date < 1) {\n                throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n            }\n        }\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    today() {\n        return new Date();\n    }\n    parse(value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        if (SUPPORTS_INTL_API) {\n            // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n            // if we attempt to format a date whose year is less than 1 or greater than 9999.\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n                date = this.clone(date);\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n            }\n            displayFormat = Object.assign(Object.assign({}, displayFormat), { timeZone: 'utc' });\n            const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return this._stripDirectionalityCharacters(date.toDateString());\n    }\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    addCalendarMonths(date, months) {\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate())\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    invalid() {\n        return new Date(NaN);\n    }\n    /** Creates a date but allows the month and date to overflow. */\n    _createDateWithOverflow(year, month, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setFullYear` and `setHours` instead.\n        const d = new Date();\n        d.setFullYear(year, month, date);\n        d.setHours(0, 0, 0, 0);\n        return d;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @param n The number to pad.\n     * @returns The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @param str The string to strip direction characters from.\n     * @returns The stripped string.\n     */\n    _stripDirectionalityCharacters(str) {\n        return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param date Date from which we want to get the string representation according to dtf\n     * @returns A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n        const d = new Date();\n        d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n        d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n        return dtf.format(d);\n    }\n}\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) { return new (t || NativeDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nNativeDateAdapter.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: NativeDateAdapter, factory: NativeDateAdapter.ɵfac });\nNativeDateAdapter.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] }] },\n    { type: Platform }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateAdapter, [{\n        type: Injectable\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_LOCALE]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    }\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass NativeDateModule {\n}\nNativeDateModule.ɵfac = function NativeDateModule_Factory(t) { return new (t || NativeDateModule)(); };\nNativeDateModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NativeDateModule });\nNativeDateModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [\n        { provide: DateAdapter, useClass: NativeDateAdapter },\n    ], imports: [PlatformModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [PlatformModule],\n                providers: [\n                    { provide: DateAdapter, useClass: NativeDateAdapter },\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NativeDateModule, { imports: function () { return [PlatformModule]; } }); })();\nconst ɵ0 = MAT_NATIVE_DATE_FORMATS;\nclass MatNativeDateModule {\n}\nMatNativeDateModule.ɵfac = function MatNativeDateModule_Factory(t) { return new (t || MatNativeDateModule)(); };\nMatNativeDateModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatNativeDateModule });\nMatNativeDateModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0 }], imports: [NativeDateModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatNativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [NativeDateModule],\n                providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0 }]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatNativeDateModule, { imports: [NativeDateModule] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Error state matcher that matches when a control is invalid and dirty. */\nclass ShowOnDirtyErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) { return new (t || ShowOnDirtyErrorStateMatcher)(); };\nShowOnDirtyErrorStateMatcher.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ShowOnDirtyErrorStateMatcher, factory: ShowOnDirtyErrorStateMatcher.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n        type: Injectable\n    }], null, null); })();\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nclass ErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) { return new (t || ErrorStateMatcher)(); };\nErrorStateMatcher.ɵprov = i0.ɵɵdefineInjectable({ factory: function ErrorStateMatcher_Factory() { return new ErrorStateMatcher(); }, token: ErrorStateMatcher, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ErrorStateMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n}\nMatLine.ɵfac = function MatLine_Factory(t) { return new (t || MatLine)(); };\nMatLine.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatLine, selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], hostAttrs: [1, \"mat-line\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLine, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-line], [matLine]',\n                host: { 'class': 'mat-line' }\n            }]\n    }], null, null); })();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nfunction setLines(lines, element, prefix = 'mat') {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe(({ length }) => {\n        setClass(element, `${prefix}-2-line`, false);\n        setClass(element, `${prefix}-3-line`, false);\n        setClass(element, `${prefix}-multi-line`, false);\n        if (length === 2 || length === 3) {\n            setClass(element, `${prefix}-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `${prefix}-multi-line`, true);\n        }\n    });\n}\n/** Adds or removes a class from an element. */\nfunction setClass(element, className, isAdd) {\n    const classList = element.nativeElement.classList;\n    isAdd ? classList.add(className) : classList.remove(className);\n}\nclass MatLineModule {\n}\nMatLineModule.ɵfac = function MatLineModule_Factory(t) { return new (t || MatLineModule)(); };\nMatLineModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatLineModule });\nMatLineModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [MatCommonModule, MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLineModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatLine, MatCommonModule],\n                declarations: [MatLine]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatLineModule, { declarations: [MatLine], imports: [MatCommonModule], exports: [MatLine, MatCommonModule] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    constructor(_renderer, \n    /** Reference to the ripple HTML element. */\n    element, \n    /** Ripple configuration used for the ripple. */\n    config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /** Current state of the ripple. */\n        this.state = 3 /* HIDDEN */;\n    }\n    /** Fades out the ripple element. */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n// TODO: import these values from `@material/ripple` eventually.\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 225,\n    exitDuration: 150\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options that apply to all the event listeners that are bound by the ripple renderer. */\nconst passiveEventOptions = normalizePassiveListenerOptions({ passive: true });\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n    constructor(_target, _ngZone, elementOrElementRef, platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /** Whether the pointer is currently down or not. */\n        this._isPointerDown = false;\n        /** Set of currently active ripple references. */\n        this._activeRipples = new Set();\n        /** Whether pointer-up event listeners have been registered. */\n        this._pointerUpEventsRegistered = false;\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param config Extra ripple options.\n     */\n    fadeInRipple(x, y, config = {}) {\n        const containerRect = this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect();\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), config.animation);\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        const offsetX = x - containerRect.left;\n        const offsetY = y - containerRect.top;\n        const duration = animationConfig.enterDuration;\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If a custom color has been specified, set it as inline style. If no color is\n        // set, the default color will be applied through the ripple theme styles.\n        if (config.color != null) {\n            ripple.style.backgroundColor = config.color;\n        }\n        ripple.style.transitionDuration = `${duration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        // Exposed reference to the ripple that will be returned.\n        const rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = 0 /* FADING_IN */;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this._runTimeoutOutsideZone(() => {\n            const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n            rippleRef.state = 1 /* VISIBLE */;\n            // When the timer runs out while the user has kept their pointer down, we want to\n            // keep only the persistent ripples and the latest transient ripple. We do this,\n            // because we don't want stacked transient ripples to appear after their enter\n            // animation has finished.\n            if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n                rippleRef.fadeOut();\n            }\n        }, duration);\n        return rippleRef;\n    }\n    /** Fades out a ripple reference. */\n    fadeOutRipple(rippleRef) {\n        const wasActive = this._activeRipples.delete(rippleRef);\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // For ripples that are not active anymore, don't re-run the fade-out animation.\n        if (!wasActive) {\n            return;\n        }\n        const rippleEl = rippleRef.element;\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), rippleRef.config.animation);\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = 2 /* FADING_OUT */;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this._runTimeoutOutsideZone(() => {\n            rippleRef.state = 3 /* HIDDEN */;\n            rippleEl.parentNode.removeChild(rippleEl);\n        }, animationConfig.exitDuration);\n    }\n    /** Fades out all currently active ripples. */\n    fadeOutAll() {\n        this._activeRipples.forEach(ripple => ripple.fadeOut());\n    }\n    /** Fades out all currently active non-persistent ripples. */\n    fadeOutAllNonPersistent() {\n        this._activeRipples.forEach(ripple => {\n            if (!ripple.config.persistent) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Sets up the trigger event listeners */\n    setupTriggerEvents(elementOrElementRef) {\n        const element = coerceElement(elementOrElementRef);\n        if (!element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._triggerElement = element;\n        this._registerEvents(pointerDownEvents);\n    }\n    /**\n     * Handles all registered events.\n     * @docs-private\n     */\n    handleEvent(event) {\n        if (event.type === 'mousedown') {\n            this._onMousedown(event);\n        }\n        else if (event.type === 'touchstart') {\n            this._onTouchStart(event);\n        }\n        else {\n            this._onPointerUp();\n        }\n        // If pointer-up events haven't been registered yet, do so now.\n        // We do this on-demand in order to reduce the total number of event listeners\n        // registered by the ripples, which speeds up the rendering time for large UIs.\n        if (!this._pointerUpEventsRegistered) {\n            this._registerEvents(pointerUpEvents);\n            this._pointerUpEventsRegistered = true;\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using mouse. */\n    _onMousedown(event) {\n        // Screen readers will fire fake mouse events for space/enter. Skip launching a\n        // ripple in this case for consistency with the non-screen-reader experience.\n        const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n        const isSyntheticEvent = this._lastTouchStartEvent &&\n            Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n        if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n            this._isPointerDown = true;\n            this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using touch. */\n    _onTouchStart(event) {\n        if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n            // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n            // events will launch a second ripple if we don't ignore mouse events for a specific\n            // time after a touchstart event.\n            this._lastTouchStartEvent = Date.now();\n            this._isPointerDown = true;\n            // Use `changedTouches` so we skip any touches where the user put\n            // their finger down, but used another finger to tap the element again.\n            const touches = event.changedTouches;\n            for (let i = 0; i < touches.length; i++) {\n                this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n            }\n        }\n    }\n    /** Function being called whenever the trigger is being released. */\n    _onPointerUp() {\n        if (!this._isPointerDown) {\n            return;\n        }\n        this._isPointerDown = false;\n        // Fade-out all ripples that are visible and not persistent.\n        this._activeRipples.forEach(ripple => {\n            // By default, only ripples that are completely visible will fade out on pointer release.\n            // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n            const isVisible = ripple.state === 1 /* VISIBLE */ ||\n                ripple.config.terminateOnPointerUp && ripple.state === 0 /* FADING_IN */;\n            if (!ripple.config.persistent && isVisible) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\n    _runTimeoutOutsideZone(fn, delay = 0) {\n        this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n    }\n    /** Registers event listeners for a given list of events. */\n    _registerEvents(eventTypes) {\n        this._ngZone.runOutsideAngular(() => {\n            eventTypes.forEach((type) => {\n                this._triggerElement.addEventListener(type, this, passiveEventOptions);\n            });\n        });\n    }\n    /** Removes previously registered event listeners from the trigger element. */\n    _removeTriggerEvents() {\n        if (this._triggerElement) {\n            pointerDownEvents.forEach((type) => {\n                this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n            });\n            if (this._pointerUpEventsRegistered) {\n                pointerUpEvents.forEach((type) => {\n                    this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n                });\n            }\n        }\n    }\n}\n/** Enforces a style recalculation of a DOM element by computing its styles. */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n        this._elementRef = _elementRef;\n        this._animationMode = _animationMode;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /** Whether ripple directive is initialized and the input bindings are set. */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n    }\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        if (value) {\n            this.fadeOutAllNonPersistent();\n        }\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     */\n    get trigger() { return this._trigger || this._elementRef.nativeElement; }\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /** Fades out all currently showing ripple elements. */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /** Fades out all currently showing non-persistent ripple elements. */\n    fadeOutAllNonPersistent() {\n        this._rippleRenderer.fadeOutAllNonPersistent();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: Object.assign(Object.assign(Object.assign({}, this._globalOptions.animation), (this._animationMode === 'NoopAnimations' ? { enterDuration: 0, exitDuration: 0 } : {})), this.animation),\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /** Sets up the trigger event listeners if ripples are enabled. */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign(Object.assign({}, this.rippleConfig), config));\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, Object.assign(Object.assign({}, this.rippleConfig), configOrX));\n        }\n    }\n}\nMatRipple.ɵfac = function MatRipple_Factory(t) { return new (t || MatRipple)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatRipple.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatRipple, selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]], hostAttrs: [1, \"mat-ripple\"], hostVars: 2, hostBindings: function MatRipple_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n    } }, inputs: { radius: [\"matRippleRadius\", \"radius\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"], color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], animation: [\"matRippleAnimation\", \"animation\"] }, exportAs: [\"matRipple\"] });\nMatRipple.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatRipple.propDecorators = {\n    color: [{ type: Input, args: ['matRippleColor',] }],\n    unbounded: [{ type: Input, args: ['matRippleUnbounded',] }],\n    centered: [{ type: Input, args: ['matRippleCentered',] }],\n    radius: [{ type: Input, args: ['matRippleRadius',] }],\n    animation: [{ type: Input, args: ['matRippleAnimation',] }],\n    disabled: [{ type: Input, args: ['matRippleDisabled',] }],\n    trigger: [{ type: Input, args: ['matRippleTrigger',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRipple, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-ripple], [matRipple]',\n                exportAs: 'matRipple',\n                host: {\n                    'class': 'mat-ripple',\n                    '[class.mat-ripple-unbounded]': 'unbounded'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { radius: [{\n            type: Input,\n            args: ['matRippleRadius']\n        }], disabled: [{\n            type: Input,\n            args: ['matRippleDisabled']\n        }], trigger: [{\n            type: Input,\n            args: ['matRippleTrigger']\n        }], color: [{\n            type: Input,\n            args: ['matRippleColor']\n        }], unbounded: [{\n            type: Input,\n            args: ['matRippleUnbounded']\n        }], centered: [{\n            type: Input,\n            args: ['matRippleCentered']\n        }], animation: [{\n            type: Input,\n            args: ['matRippleAnimation']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRippleModule {\n}\nMatRippleModule.ɵfac = function MatRippleModule_Factory(t) { return new (t || MatRippleModule)(); };\nMatRippleModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatRippleModule });\nMatRippleModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [MatCommonModule, PlatformModule, MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRippleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, PlatformModule],\n                exports: [MatRipple, MatCommonModule],\n                declarations: [MatRipple]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRippleModule, { declarations: function () { return [MatRipple]; }, imports: function () { return [MatCommonModule, PlatformModule]; }, exports: function () { return [MatRipple, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\nclass MatPseudoCheckbox {\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /** Display state of the checkbox. */\n        this.state = 'unchecked';\n        /** Whether the checkbox is disabled. */\n        this.disabled = false;\n    }\n}\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) { return new (t || MatPseudoCheckbox)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPseudoCheckbox.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatPseudoCheckbox, selectors: [[\"mat-pseudo-checkbox\"]], hostAttrs: [1, \"mat-pseudo-checkbox\"], hostVars: 8, hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { state: \"state\", disabled: \"disabled\" }, decls: 0, vars: 0, template: function MatPseudoCheckbox_Template(rf, ctx) { }, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatPseudoCheckbox.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPseudoCheckbox.propDecorators = {\n    state: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n        type: Component,\n        args: [{ encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, selector: 'mat-pseudo-checkbox', template: '', host: {\n                    'class': 'mat-pseudo-checkbox',\n                    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                }, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"] }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { state: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPseudoCheckboxModule {\n}\nMatPseudoCheckboxModule.ɵfac = function MatPseudoCheckboxModule_Factory(t) { return new (t || MatPseudoCheckboxModule)(); };\nMatPseudoCheckboxModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatPseudoCheckboxModule });\nMatPseudoCheckboxModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatPseudoCheckbox],\n                declarations: [MatPseudoCheckbox]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPseudoCheckboxModule, { declarations: [MatPseudoCheckbox], imports: [MatCommonModule], exports: [MatPseudoCheckbox] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent component to options.\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n// Boilerplate for applying mixins to MatOptgroup.\n/** @docs-private */\nconst _MatOptgroupMixinBase = mixinDisabled(class {\n});\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\nclass _MatOptgroupBase extends _MatOptgroupMixinBase {\n    constructor(parent) {\n        var _a;\n        super();\n        /** Unique id for the underlying label. */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n        this._inert = (_a = parent === null || parent === void 0 ? void 0 : parent.inertGroups) !== null && _a !== void 0 ? _a : false;\n    }\n}\n_MatOptgroupBase.ɵfac = function _MatOptgroupBase_Factory(t) { return new (t || _MatOptgroupBase)(ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8)); };\n_MatOptgroupBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatOptgroupBase, inputs: { label: \"label\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatOptgroupBase.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] }, { type: Optional }] }\n];\n_MatOptgroupBase.propDecorators = {\n    label: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatOptgroupBase, [{\n        type: Directive\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_OPTION_PARENT_COMPONENT]\n            }, {\n                type: Optional\n            }] }]; }, { label: [{\n            type: Input\n        }] }); })();\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupBase {\n}\nMatOptgroup.ɵfac = /*@__PURE__*/ function () { let ɵMatOptgroup_BaseFactory; return function MatOptgroup_Factory(t) { return (ɵMatOptgroup_BaseFactory || (ɵMatOptgroup_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatOptgroup)))(t || MatOptgroup); }; }();\nMatOptgroup.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatOptgroup, selectors: [[\"mat-optgroup\"]], hostAttrs: [1, \"mat-optgroup\"], hostVars: 5, hostBindings: function MatOptgroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx._inert ? null : \"group\")(\"aria-disabled\", ctx._inert ? null : ctx.disabled.toString())(\"aria-labelledby\", ctx._inert ? null : ctx._labelId);\n        ɵngcc0.ɵɵclassProp(\"mat-optgroup-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, exportAs: [\"matOptgroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 2, consts: [[\"aria-hidden\", \"true\", 1, \"mat-optgroup-label\", 3, \"id\"]], template: function MatOptgroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx._labelId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n    } }, styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"], encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptgroup, [{\n        type: Component,\n        args: [{ selector: 'mat-optgroup', exportAs: 'matOptgroup', template: \"<span class=\\\"mat-optgroup-label\\\" aria-hidden=\\\"true\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></span>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\", encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled'], host: {\n                    'class': 'mat-optgroup',\n                    '[attr.role]': '_inert ? null : \"group\"',\n                    '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n                    '[attr.aria-labelledby]': '_inert ? null : _labelId',\n                    '[class.mat-optgroup-disabled]': 'disabled'\n                }, providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }], styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"] }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n    constructor(\n    /** Reference to the option that emitted the event. */\n    source, \n    /** Whether the change in the option's value was a result of a user action. */\n    isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\nclass _MatOptionBase {\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /** The unique ID of the option. */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /** Emits when the state of the option changes and any parents have to be notified. */\n        this._stateChanges = new Subject();\n    }\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() { return this._parent && this._parent.multiple; }\n    /** Whether or not the option is currently selected. */\n    get selected() { return this._selected; }\n    /** Whether the option is disabled. */\n    get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() { return this._parent && this._parent.disableRipple; }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n    /** Selects the option. */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /** Deselects the option. */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /** Sets focus onto this option. */\n    focus(_origin, options) {\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus(options);\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        return this.viewValue;\n    }\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     */\n    _getAriaSelected() {\n        return this.selected || (this.multiple ? false : null);\n    }\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Gets the host DOM element. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /** Emits the selection change event. */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n}\n_MatOptionBase.ɵfac = function _MatOptionBase_Factory(t) { return new (t || _MatOptionBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(_MatOptgroupBase)); };\n_MatOptionBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatOptionBase, inputs: { id: \"id\", disabled: \"disabled\", value: \"value\" }, outputs: { onSelectionChange: \"onSelectionChange\" } });\n_MatOptionBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined },\n    { type: _MatOptgroupBase }\n];\n_MatOptionBase.propDecorators = {\n    value: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }],\n    onSelectionChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatOptionBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined }, { type: _MatOptgroupBase }]; }, { id: [{\n            type: Input\n        }], onSelectionChange: [{\n            type: Output\n        }], disabled: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption extends _MatOptionBase {\n    constructor(element, changeDetectorRef, parent, group) {\n        super(element, changeDetectorRef, parent, group);\n    }\n}\nMatOption.ɵfac = function MatOption_Factory(t) { return new (t || MatOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_OPTGROUP, 8)); };\nMatOption.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatOption, selectors: [[\"mat-option\"]], hostAttrs: [\"role\", \"option\", 1, \"mat-option\", \"mat-focus-indicator\"], hostVars: 12, hostBindings: function MatOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() { return ctx._selectViaInteraction(); })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx._getAriaSelected())(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-selected\", ctx.selected)(\"mat-option-multiple\", ctx.multiple)(\"mat-active\", ctx.active)(\"mat-option-disabled\", ctx.disabled);\n    } }, exportAs: [\"matOption\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 5, vars: 4, consts: [[\"class\", \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-option-text\"], [\"class\", \"cdk-visually-hidden\", 4, \"ngIf\"], [\"mat-ripple\", \"\", 1, \"mat-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\"], [1, \"cdk-visually-hidden\"]], template: function MatOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, MatOption_span_3_Template, 2, 1, \"span\", 2);\n        ɵngcc0.ɵɵelement(4, \"div\", 3);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.group && ctx.group._inert);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n    } }, dependencies: [MatRipple, ɵngcc3.NgIf, MatPseudoCheckbox], styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] }] },\n    { type: MatOptgroup, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTGROUP,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOption, [{\n        type: Component,\n        args: [{ selector: 'mat-option', exportAs: 'matOption', host: {\n                    'role': 'option',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[class.mat-selected]': 'selected',\n                    '[class.mat-option-multiple]': 'multiple',\n                    '[class.mat-active]': 'active',\n                    '[id]': 'id',\n                    '[attr.aria-selected]': '_getAriaSelected()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[class.mat-option-disabled]': 'disabled',\n                    '(click)': '_selectViaInteraction()',\n                    '(keydown)': '_handleKeydown($event)',\n                    'class': 'mat-option mat-focus-indicator'\n                }, template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\", encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_OPTION_PARENT_COMPONENT]\n            }] }, { type: MatOptgroup, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_OPTGROUP]\n            }] }]; }, null); })();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        let optionsArray = options.toArray();\n        let groups = optionGroups.toArray();\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatOptionModule {\n}\nMatOptionModule.ɵfac = function MatOptionModule_Factory(t) { return new (t || MatOptionModule)(); };\nMatOptionModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatOptionModule });\nMatOptionModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule],\n                exports: [MatOption, MatOptgroup],\n                declarations: [MatOption, MatOptgroup]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatOptionModule, { declarations: function () { return [MatOption, MatOptgroup]; }, imports: function () { return [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule]; }, exports: function () { return [MatOption, MatOptgroup]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationCurves, AnimationDurations, DateAdapter, ErrorStateMatcher, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatLine, MatLineModule, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NativeDateAdapter, NativeDateModule, RippleRef, RippleRenderer, ShowOnDirtyErrorStateMatcher, VERSION$1 as VERSION, _MatOptgroupBase, _MatOptionBase, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines, ɵ0, MATERIAL_SANITY_CHECKS_FACTORY as ɵangular_material_src_material_core_core_a };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}